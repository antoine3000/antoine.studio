<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Dok</title><link>https://domingoclub.com</link><description>documentation system</description><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><language>en</language><lastBuildDate>Mon, 04 Jul 2022 12:07:54 +0000</lastBuildDate><item><title>Focus404 ↝ Alien Jazz</title><link>https://domingoclub.com/focus404-alien-jazz.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;At the end of December 2020, I felt the need to create a musical project. One of my first. I went for several days, alone, to a yurt surrounded by llamas located in the south of Catalonia, Spain.  I spent my days walking, cycling, practicing yoga and meditation. And my nights composing this album.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="alien-jazz-cover.jpg:flux"/&gt;&lt;/p&gt;
&lt;div class="player" style="max-width: 720px;"&gt;&lt;div style="left: 0; width: 100%; height: 365px; position: relative;"&gt;&lt;iframe allow="encrypted-media" allowfullscreen="" src="https://bandcamp.com/EmbeddedPlayer/album=1330270076/size=large/bgcol=ffffff/linkcol=333333/artwork=none/transparent=true/" style="border: 0; top: 0; left: 0; width: 100%; height: 100%; position: absolute;"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Alien Jazz&lt;/em&gt; is available on &lt;a class="external" href="https://focus404.bandcamp.com/album/alien-jazz"&gt;Bandcamp&lt;/a&gt; and &lt;a class="external" href="https://soundcloud.com/focus404/sets/alien-jazz"&gt;Soundcloud&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="trip-yurt-01.jpg"/&gt;
&lt;img alt="" src="trip-yurt-02.jpg"/&gt;
&lt;img alt="" src="trip-yurt-03.jpg"/&gt;
&lt;img alt="" src="trip-yurt-04.jpg"/&gt;
&lt;img alt="" src="trip-yurt-05.jpg"/&gt;
&lt;img alt="" src="trip-yurt-06.jpg"/&gt;
&lt;img alt="" src="trip-yurt-08.jpg"/&gt;
&lt;img alt="" src="trip-yurt-09.jpg"/&gt;
&lt;img alt="" src="trip-yurt-10.jpg"/&gt;
&lt;img alt="" src="trip-yurt-11.jpg"/&gt;
&lt;img alt="" src="trip-yurt-13.jpg"/&gt;
&lt;img alt="" src="trip-yurt-14.jpg"/&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;...</description><pubDate>Fri, 30 Apr 2021 00:00:00 +0200</pubDate></item><item><title>Raspberry Pi Pico</title><link>https://domingoclub.com/pico.html</link><description>&lt;html&gt;&lt;body&gt;&lt;h1 id="documentation"&gt;Documentation&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class="external" href="https://www.raspberrypi.org/documentation/rp2040/getting-started/"&gt;Pico documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="external" href="https://datasheets.raspberrypi.org/pico/raspberry-pi-pico-python-sdk.pdf"&gt;Pico MicroPython documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="installation"&gt;Installation&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a class="external" href="https://www.raspberrypi.org/documentation/rp2040/getting-started/#getting-started-with-micropython"&gt;Install MicroPython&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Install rshell &lt;code&gt;pip3 install rshell&lt;/code&gt; (&lt;a class="external" href="https://www.twilio.com/blog/programming-raspberry-pi-pico-microcontroller-micropython"&gt;guide&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Install &lt;a class="external" href="https://salsa.debian.org/minicom-team/minicom"&gt;Minicom&lt;/a&gt; (USB serial) - &lt;a class="external" href="https://aur.archlinux.org/packages/minicom-git/"&gt;AUR&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id="use"&gt;Use&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;Go to the folder of your choice &lt;code&gt;cd pico/experiments/&lt;/code&gt; and create a &lt;code&gt;main.py&lt;/code&gt; file that will contain your MicroPython script&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;rshell -p /dev/ttyACM0 --buffer-size 512&lt;/code&gt; where &lt;code&gt;ttyACM0&lt;/code&gt; in the Pico adress on your machine. Run &lt;code&gt;dmesg -w&lt;/code&gt; to see the devices connected to your computer, and therefore the address of your Pico.&lt;/li&gt;
&lt;li&gt;Copy your local script to the pico by running &lt;code&gt;cp main.py /pyboard/main.py&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Close the rshell connection &lt;code&gt;CTRL + x&lt;/code&gt; and unplug/plug your Pico&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;minicom -b 115200 -o -D /dev/ttyACM0&lt;/code&gt; to read the serial communiction (replace &lt;code&gt;ttyACM0&lt;/code&gt; with your Pico address previously obtained)&lt;/li&gt;
&lt;/ol&gt;&lt;/body&gt;&lt;/html&gt;...</description><pubDate>Wed, 21 Apr 2021 00:00:00 +0200</pubDate></item><item><title>Purify indoor air with moss</title><link>https://domingoclub.com/moss.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;I am investigating what could be a low-maintenance, low-tech solution to purify indoor air, and my research has naturally led me to moss and its purifying properties.&lt;/p&gt;
&lt;h2 id="starting-point"&gt;Starting point&lt;/h2&gt;
&lt;p&gt;One project in particular caught my attention, found on &lt;a class="external" href="https://www.theearthissue.com/fashion-lifestyle/foliair"&gt;The Earth Issue&lt;/a&gt;, it is called &lt;a class="external" href="https://www.foliair.com/"&gt;Foliair&lt;/a&gt; and it is a decorative frame that you can hang on your wall, but it is made of moss, so it purifies your place.&lt;/p&gt;
&lt;h2 id="learning-by-doing"&gt;Learning by doing&lt;/h2&gt;
&lt;p&gt;As soon as I read this, I went to the nearest park to my apartment, Montjuïc Barcelona, and picked up moss where I could find it, in order to start my own culture. This video, &lt;a class="external" href="https://www.youtube.com/watch?v=CleZGsQGIOI"&gt;How to propagate your own moss&lt;/a&gt; helped me to get the basics right.&lt;/p&gt;
&lt;h2 id="exploration"&gt;Exploration&lt;/h2&gt;
&lt;p&gt;I'm not sure yet what I am going to do with this project, but this page will be used to document my explorations.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="small:02.jpg"/&gt;
&lt;img alt="" src="small:03.jpg"/&gt;
&lt;img alt="" src="small:04.jpg"/&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;...</description><pubDate>Fri, 05 Feb 2021 00:00:00 +0200</pubDate></item><item><title>Kodak ColorPlus 200 - 1345</title><link>https://domingoclub.com/kodakcolorplus200-1345.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;These photos were taken between October and Novembrer 2020 in Barcelona.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="large:01.jpg"/&gt;
&lt;img alt="" src="large:02.jpg"/&gt;
&lt;img alt="" src="large:03.jpg"/&gt;
&lt;img alt="" src="large:04.jpg"/&gt;
&lt;img alt="" src="large:05.jpg"/&gt;
&lt;img alt="" src="large:06.jpg"/&gt;
&lt;img alt="" src="large:07.jpg"/&gt;
&lt;img alt="" src="large:08.jpg"/&gt;
&lt;img alt="" src="large:09.jpg"/&gt;
&lt;img alt="" src="large:10.jpg"/&gt;
&lt;img alt="" src="large:11.jpg"/&gt;
&lt;img alt="" src="large:12.jpg"/&gt;
&lt;img alt="" src="large:13.jpg"/&gt;
&lt;img alt="" src="large:14.jpg"/&gt;
&lt;img alt="" src="large:15.jpg"/&gt;
&lt;img alt="" src="large:16.jpg"/&gt;
&lt;img alt="" src="large:17.jpg"/&gt;
&lt;img alt="" src="large:18.jpg"/&gt;
&lt;img alt="" src="large:19.jpg"/&gt;
&lt;img alt="" src="large:20.jpg"/&gt;
&lt;img alt="" src="large:21.jpg"/&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;...</description><pubDate>Thu, 07 Jan 2021 00:00:00 +0200</pubDate></item><item><title>Kodak ColorPlus 200 - 1346</title><link>https://domingoclub.com/kodakcolorplus200-1346.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;These photos were taken between September and October 2020 in Barcelona, Badalona and Monsterrat.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="large:01.jpg"/&gt;
&lt;img alt="" src="large:02.jpg"/&gt;
&lt;img alt="" src="large:03.jpg"/&gt;
&lt;img alt="" src="large:04.jpg"/&gt;
&lt;img alt="" src="large:05.jpg"/&gt;
&lt;img alt="" src="large:06.jpg"/&gt;
&lt;img alt="" src="large:07.jpg"/&gt;
&lt;img alt="" src="large:08.jpg"/&gt;
&lt;img alt="" src="large:09.jpg"/&gt;
&lt;img alt="" src="large:10.jpg"/&gt;
&lt;img alt="" src="large:11.jpg"/&gt;
&lt;img alt="" src="large:12.jpg"/&gt;
&lt;img alt="" src="large:13.jpg"/&gt;
&lt;img alt="" src="large:14.jpg"/&gt;
&lt;img alt="" src="large:15.jpg"/&gt;
&lt;img alt="" src="large:16.jpg"/&gt;
&lt;img alt="" src="large:17.jpg"/&gt;
&lt;img alt="" src="large:18.jpg"/&gt;
&lt;img alt="" src="large:19.jpg"/&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;...</description><pubDate>Wed, 06 Jan 2021 00:00:00 +0200</pubDate></item><item><title>References</title><link>https://domingoclub.com/references.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;Here is a collection of references on DIY music player, music related hardware or anything that could help me in my quest of making my music player.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class="external" href="https://github.com/PaulStoffregen/Audio"&gt;Teensy Audio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="external" href="https://bela.io/"&gt;Bela&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="external" href="https://www.elecrow.com/bluetooth-audio-receiver-decoding-player-p-1630.html"&gt;Bluetooth audio receiver module&lt;/a&gt; used by &lt;a class="external" href="https://wiki.xxiivv.com/site/hardware.html"&gt;Neauoire&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="external" href="https://hackaday.io/project/171750-tinydfplayer"&gt;TinyDFPlayer&lt;/a&gt; on Hackaday&lt;/li&gt;
&lt;li&gt;&lt;a class="external" href="https://learn.adafruit.com/adafruit-music-maker-featherwing"&gt;Adafruit Music Maker FeatherWing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="external" href="https://learn.adafruit.com/adafruit-music-maker-shield-vs1053-mp3-wav-wave-ogg-vorbis-player/overview"&gt;Adafruit music maker shield&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="external" href="http://www.vlsi.fi/en/products/vs1053.html"&gt;VS1053 audio codec chip&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/body&gt;&lt;/html&gt;...</description><pubDate>Mon, 04 Jan 2021 00:00:00 +0200</pubDate></item><item><title>Music player</title><link>https://domingoclub.com/music-player.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;I would like to have an easy solution to listen to music on the go. My ideal player has an SD card that contains music folders, a 3.5 mm jack input, a removable battery, a black and white screen that shows a minimal interface, and it runs on open-source software.&lt;/p&gt;
&lt;p&gt;I haven't found the one I am ready to always take with me, so I will try to make it myself. This article will contain my explorations on trying to do so.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;...</description><pubDate>Mon, 04 Jan 2021 00:00:00 +0200</pubDate></item><item><title>Vim</title><link>https://domingoclub.com/vim.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;leader key &lt;code&gt;,&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;quit &lt;code&gt;q&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;move &lt;code&gt;h j k l&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;move line by line in a paragraph &lt;code&gt;g + j k&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;visual mode &lt;code&gt;v&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;normal mode &lt;code&gt;esc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;insert before the cursor &lt;code&gt;i&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;insert after the cursor &lt;code&gt;a&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;insert at the end of the line &lt;code&gt;A&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;begin a new line below the cursor and insert &lt;code&gt;o&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;begin a new line above the cursor and insert &lt;code&gt;O&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;copy &lt;code&gt;y&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;cut &lt;code&gt;d&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;paste &lt;code&gt;p&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;paste above &lt;code&gt;P&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;replace &lt;code&gt;r&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;undo &lt;code&gt;u&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;redo &lt;code&gt;ctrl + r&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;undo all changes on the line &lt;code&gt;U&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;delete text &lt;code&gt;d&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;delete line &lt;code&gt;dd&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;delete text (and yank to the buffer) and enter insert mode &lt;code&gt;c&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;delete the line and enter insert mode &lt;code&gt;cc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;delete until the end of the line and enter insert mode &lt;code&gt;C&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;go to first line &lt;code&gt;gg&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;go the last line &lt;code&gt;G&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;open files &lt;code&gt;, space&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;open files in the buffer &lt;code&gt;, b&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;close current file (buffer) &lt;code&gt;:bd&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/body&gt;&lt;/html&gt;...</description><pubDate>Sun, 03 Jan 2021 00:00:00 +0200</pubDate></item><item><title>Terminal</title><link>https://domingoclub.com/terminal.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;Notes about different tools I use in the terminal.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;...</description><pubDate>Sun, 03 Jan 2021 00:00:00 +0200</pubDate></item><item><title>Tempeh collection</title><link>https://domingoclub.com/tempeh-collection.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;Collection of tempeh made with our &lt;a class="internal" href="incubator-v0-2.html"&gt;incubator&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Chickpeas, red and green beans" src="small:tempeh-01.jpg"/&gt;
&lt;img alt="Chickpeas, red and green beans" src="small:tempeh-02.jpg"/&gt;
&lt;img alt="Chickpeas" src="small:tempeh-03.jpg:flux"/&gt;
&lt;img alt="Soy beans, adzuki beans" src="small:tempeh-04.jpg"/&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;...</description><pubDate>Sun, 13 Dec 2020 00:00:00 +0200</pubDate></item><item><title>Prototype of an indoor growing system</title><link>https://domingoclub.com/indoor-growing-system.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;TODO: Document everyting&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="grow-light-01.jpg"/&gt;
&lt;img alt="" src="grow-light-08.jpg"/&gt;
&lt;img alt="" src="grow-light-09.jpg"/&gt;
&lt;img alt="" src="grow-light-07.jpg"/&gt;
&lt;img alt="" src="grow-light-02.jpg"/&gt;
&lt;img alt="" src="grow-light-03.jpg"/&gt;
&lt;img alt="" src="grow-light-04.jpg"/&gt;
&lt;img alt="" src="grow-light-05.jpg"/&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;...</description><pubDate>Fri, 11 Dec 2020 00:00:00 +0200</pubDate></item><item><title>Cabinet</title><link>https://domingoclub.com/cabinet.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;TODO: Document this part according to Maud's documentation&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;...</description><pubDate>Tue, 01 Dec 2020 00:00:00 +0200</pubDate></item><item><title>Incubator v0.2</title><link>https://domingoclub.com/incubator-v0-2.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;As my &lt;a class="internal" href="incubator-v0-1.html"&gt;version 0.1&lt;/a&gt; was not working as expected, I quickly moved on an another version, the 0.2. In this version, I redesigned the electronics and made a case for it, I made a small web interface to control and modify the temperature inside the incubator and finally did some tempeh!&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;...</description><pubDate>Wed, 25 Nov 2020 00:00:00 +0200</pubDate></item><item><title>Our first tempeh</title><link>https://domingoclub.com/first-tempeh.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;TODO: Everything :)&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="large:yummy.jpg"/&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;...</description><pubDate>Wed, 25 Nov 2020 00:00:00 +0200</pubDate></item><item><title>Web interface</title><link>https://domingoclub.com/web-interface.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;TODO: Everything :)&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;...</description><pubDate>Tue, 24 Nov 2020 00:00:00 +0200</pubDate></item><item><title>A case for the electronics</title><link>https://domingoclub.com/case-for-electronics.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;Now that the &lt;a class="internal" href="incubator-v0-2-electronics.html"&gt;electronics&lt;/a&gt; is working, I need to protect it a little to avoid mishandling that could damage it. To do this, I will design a case which will then be printed in 3D.&lt;/p&gt;
&lt;h1 id="design"&gt;Design&lt;/h1&gt;
&lt;p&gt;The main idea of this design is to have all the functions accessible while having a light reflection that communicates the state of the incubator (if it is heating up, or if it has reached the desired temperature, or if it is cooling down).&lt;/p&gt;
&lt;p&gt;TODO: Add technical details&lt;/p&gt;
&lt;h2 id="what-must-remain-accessible"&gt;What must remain accessible&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;the USB port&lt;/li&gt;
&lt;li&gt;Barrel jack&lt;/li&gt;
&lt;li&gt;Reset button&lt;/li&gt;
&lt;li&gt;Programmer switch&lt;/li&gt;
&lt;li&gt;Terminals (3)&lt;/li&gt;
&lt;li&gt;ESP32 antenna&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="a-way-to-fix-it"&gt;A way to fix it&lt;/h2&gt;
&lt;p&gt;Also, we need to find a way to fix the electronics in the case and then the case in the incubator, for this I will use M3 bolts and nuts. I downloaded a &lt;a class="external" href="https://grabcad.com/library/m3-hex-nut-1"&gt;3D model&lt;/a&gt; of the M3 nut that I incorporated into my design.&lt;/p&gt;
&lt;h2 id="from-kicad-to-freecad"&gt;From KiCAD to FreeCAD&lt;/h2&gt;
&lt;p&gt;Both &lt;a class="external" href="https://www.kicad.org/"&gt;KiCAD&lt;/a&gt; (Electronics design) and &lt;a class="external" href="https://www.freecadweb.org/"&gt;FreeCAD&lt;/a&gt; (2D and 3D parametric modeler) are open-source and work hand in hand in order to facilitate the use of one after the other. FreeCAD's &lt;a class="external" href="https://wiki.freecadweb.org/KicadStepUp_Workbench"&gt;KicadStepUp workbench&lt;/a&gt; allows to import a 3D model from a PCB designed in KiCAD to start designing from it.&lt;/p&gt;
&lt;h2 id="views"&gt;Views&lt;/h2&gt;
&lt;p&gt;&lt;img alt="" src="case-01.png"/&gt;
&lt;img alt="" src="case-02.png"/&gt;
&lt;img alt="" src="case-03.png"/&gt;
&lt;img ...</description><pubDate>Mon, 23 Nov 2020 00:00:00 +0200</pubDate></item><item><title>Electronics</title><link>https://domingoclub.com/electronics.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;This is the continuation of &lt;a class="internal" href="incubator-v0-1-electronics.html"&gt;the electronics of the v0.1&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In the previous version I had some problems with the ESP32 pins I was using. The one I had chosen for the heating pad could not be used as an output and the one I had chosen for the DHT11 sensor could not read values for any reason. I found out which pins to use after a session of testing all the pins and whether or not they could meet my needs.&lt;/p&gt;
&lt;p&gt;Also, during my tests, I realised that the DHT11 sensor doesn't really need 5V to work, even though I thought it would be better/safe to use it this way. This means that I can remove some components from the PCB (the level shifter that converted 3.3V to 5V), which simplified the PCB design.&lt;/p&gt;
&lt;h1 id="schematics"&gt;Schematics&lt;/h1&gt;
&lt;p&gt;&lt;img alt="" src="large:schematics.svg"/&gt;&lt;/p&gt;
&lt;h1 id="pcb-design"&gt;PCB design&lt;/h1&gt;
&lt;p&gt;&lt;img alt="" src="pcb-3d.png"/&gt;
&lt;img alt="" src="pcb.svg"/&gt;&lt;/p&gt;
&lt;h2 id="robustness-and-therefore-longevity"&gt;Robustness and therefore longevity&lt;/h2&gt;
&lt;p&gt;This time, I decided to solder some components on the back of the PCB, as this will be easier to solder and will ensure the robustness and therefore the longevity of the design.&lt;/p&gt;
&lt;p&gt;The components that will be soldered on the back are the Barduino (header), the barrel jack, the terminals (heating pad, fan, DHT11 sensor). To ensure the circuit connectivity, I have inverted the footprint of the Barduino and the barrel jack (I don't have to do this for the terminals as I will simply invert the cables).&lt;/p&gt;
&lt;h1 id="fabrication-and-soldering"&gt;Fabrication and soldering&lt;/h1&gt;
&lt;p&gt;I fabricated this board at the Fab Lab Barcelona using a Roland SRM-20 milling machine. Then I took it home to solder it quietly with a good cup of tea.&lt;...</description><pubDate>Sun, 22 Nov 2020 00:00:00 +0200</pubDate></item><item><title>Interface</title><link>https://domingoclub.com/interface.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;I decided to go screenless for this project, and to use the screen that we already have in our pocket: the one from our phone. This choice is motivated by the resource I have at my disposal. Ideally, in the next version, I would add a tiny screen to make the incubator totally independent of other technologies. I don't want to force the use of a smartphone (because I would like to stop using mine).&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;...</description><pubDate>Thu, 12 Nov 2020 00:00:00 +0200</pubDate></item><item><title>Interface example</title><link>https://domingoclub.com/interface-example.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;To make sure I understand how a web interface is made via an ESP32, I started with a very basic example. The only thing this minimal example will do is to light on and off the RGB LED connected to the Barduino (ESP32) through the incubator shield I designed via a web interface accessible from any browser (desktop and mobile).&lt;/p&gt;
&lt;video&gt;&lt;source src="esp-interface-minimal.mp4"/&gt;&lt;/video&gt;
&lt;p&gt;&lt;img alt="very very minimal" src="small:interface-screenshot.png"/&gt;&lt;/p&gt;
&lt;h2 id="key-elements"&gt;Key elements&lt;/h2&gt;
&lt;h3 id="librairies"&gt;Librairies&lt;/h3&gt;
&lt;p&gt;Include the librairies: Arduino framework, AnalogWrite to manipulate analog output with the ESP32 and Wifi, the one that interests us here.&lt;/p&gt;
&lt;pre&gt;
#include &amp;lt;Arduino.h&amp;gt;
#include &amp;lt;analogWrite.h&amp;gt;
#include &amp;lt;WiFi.h&amp;gt;
&lt;/pre&gt;
&lt;h3 id="wifi-credentials"&gt;Wifi credentials&lt;/h3&gt;
&lt;p&gt;Include the Wifi network credentials so that the ESP32 can access your wifi.&lt;/p&gt;
&lt;pre&gt;
const char *ssid = "********";
const char *password = "********";
WiFiServer server(80);
&lt;/pre&gt;
&lt;h3 id="initialize-the-connection"&gt;Initialize the connection&lt;/h3&gt;
&lt;p&gt;This code is then used to initialize a connection to the address &lt;code&gt;192.168.1.118&lt;/code&gt;. This IP address is accessible to all devices connected to the same Wifi network.&lt;/p&gt;
&lt;pre&gt;
void initWiFi()
{
  Serial.println("Connecting to ");
  Serial.println(ssid);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED)
  {
    delay(1000);
    Serial.print(".");
  }
  Serial.println("");
  Serial.println("WiFi connected successfully");
  Serial.print("Got IP: ");
  Serial.println(WiFi.localIP());
  server.begin();
  Serial.println("HTTP server started");
  delay(100);
}
&lt;/pre&gt;
&lt;h3 id="get-the-header"&gt;Get the header&lt;/h3&gt;
&lt;p&gt;Information will travel via the URL that we send from one ...</description><pubDate>Tue, 10 Nov 2020 00:00:00 +0200</pubDate></item><item><title>Coding the electronics</title><link>https://domingoclub.com/coding-electronics.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;The following code does two main things for our Pong Machine. The first is the calibration of the stepper motor, in order to know how many steps separate the beginning from the end of the rail, and therefore to know how to move the paddle. The second is to update the position of the motor according to any crossed lines in the field, in order to follow the ball. Later, it will actuate the solenoid to push the ball forward.&lt;/p&gt;
&lt;h1 id="calibration"&gt;Calibration&lt;/h1&gt;
&lt;p&gt;To calibrate, I run the stepper motor in one direction until it reaches an endstop, then I make it move in the other direction counting all the steps the motor takes until we reach the other endstop. Once we know how many steps separate the beginning from the end, we can place the motor in the middle and start the game.&lt;/p&gt;
&lt;video&gt;&lt;source src="calibration-compressed.mp4"/&gt;&lt;/video&gt;
&lt;pre&gt;&lt;code&gt;
void motorCalibration()
{
  endstopStatus = digitalRead(endstop);
  while (endstopStatus == true)
  {
    // to right
    motorStep(false, 1, 0);
    endstopStatus = digitalRead(endstop);
  }
  motorStep(true, 30, 50);
  endstopStatus = digitalRead(endstop);
  while (endstopStatus == true)
  {
    // to left
    motorStep(true, 1, 0);
    endstopStatus = digitalRead(endstop);
    totalSteps++;
  }
  totalSteps = totalSteps + 30;
  Serial.println(totalSteps);
  // send motor to center
  laneSteps = totalSteps / 4;
  motorStep(false, totalSteps / 2, 50);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="positioning"&gt;Positioning&lt;/h1&gt;
&lt;p&gt;To position correctly the pad according to any crossed lines we had to think about good logic. And the simplest one is always the best.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="logic.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;Each &lt;code&gt;lane&lt;/code&gt; has a numerical value between 0 and 4 and each &lt;code&gt;line&lt;/code&gt; also has a numerical value between...</description><pubDate>Tue, 10 Nov 2020 00:00:00 +0200</pubDate></item><item><title>Making the field</title><link>https://domingoclub.com/making-the-field.html</link><description>&lt;html&gt;&lt;body&gt;&lt;h1 id="mounting-plate"&gt;Mounting plate&lt;/h1&gt;
&lt;p&gt;I designed and laser-cut a mounting plate made of acrylic (&lt;code&gt;10 mm&lt;/code&gt;) with the imprints of our elements (NEMA17 stepper motor and solenoid) in order to be able to fix our elements to the structure, and thus make it move when the stepper motor is actuated.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="mounting-plate-freecad.png"/&gt;
&lt;img alt="" src="mounting-plate-measures.png"/&gt;
&lt;img alt="" src="field-02.jpg"/&gt;
&lt;img alt="" src="large:mounting-plate-2.jpg"/&gt;&lt;/p&gt;
&lt;h1 id="solenoid-holder"&gt;Solenoid holder&lt;/h1&gt;
&lt;p&gt;To fix the solenoid, which will then be used to push the ball forward, I designed an holder that we could screw onto our mounting plate.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="solenoid-holder.png"/&gt;
&lt;img alt="" src="solenoid-holder-01.jpg"/&gt;
&lt;img alt="" src="solenoid-holder-02.jpg"/&gt;
&lt;img alt="" src="solenoid-holder-03.jpg"/&gt;&lt;/p&gt;
&lt;h1 id="files"&gt;Files&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Solenoid holder (Freecad design file): &lt;a class="internal" href="file:system-solenoid.FCStd"&gt;system-solenoid.FCStd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Solenoid holder (Fabrication file): &lt;a class="internal" href="file:solenoid-holder-2.stl"&gt;solenoid-holder-2.stl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Mounting plate (Freecad design file): &lt;a class="internal" href="file:mounting-plate.FCStd"&gt;mounting-plate.FCStd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;Mounting plate (Fabrication file): &lt;a class="internal" href="file:mounting-plate.dxf"&gt;mounting-plate.dxf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/body&gt;&lt;/html&gt;...</description><pubDate>Mon, 09 Nov 2020 00:00:00 +0200</pubDate></item><item><title>Electronics</title><link>https://domingoclub.com/incubator-v0-1-electronics.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;The electronic part of the incubator must remain as simple as possible, to offer the possibility of being understood and modified by others. I don't want to lock the users in a device they don't understand.&lt;/p&gt;
&lt;p&gt;It is built as an extra board that comes with a Barduino, allowing it to operate with two 12V outputs and one 5V input.&lt;/p&gt;
&lt;h1 id="components"&gt;Components&lt;/h1&gt;
&lt;h2 id="barduino"&gt;Barduino&lt;/h2&gt;
&lt;p&gt;A &lt;a class="external" href="https://gitlab.com/fablabbcn-projects/electronics/barduino"&gt;Barduino&lt;/a&gt;, an ESP32 development board made in Barcelona, is used as the brain. This allows me to use a Wifi compatible board with a functional USB connection without having to do it (again) by myself. Moreover, it allows me to design a shield (something I've never done before) and to participate in an open-source project that I'd like to support.&lt;/p&gt;
&lt;h2 id="humidity-and-temperature-sensor"&gt;Humidity and temperature sensor&lt;/h2&gt;
&lt;p&gt;A &lt;a class="external" href="https://www.adafruit.com/product/386"&gt;DHT11&lt;/a&gt; humidity and temperature sensor provides information on what is happening in the incubator. I use the DHT11 mainly because it is available in the laboratory. I am not entirely satisfied with this sensor because it is slow and sometimes skips some data. It is clearly sufficient for this project because I don't need a high efficiency sensor, but it is not ideal.&lt;/p&gt;
&lt;h2 id="heating-pad"&gt;Heating pad&lt;/h2&gt;
&lt;p&gt;A &lt;a class="external" href="https://www.adafruit.com/product/1481"&gt;heating pad&lt;/a&gt; (&lt;a class="external" href="https://cdn-shop.adafruit.com/datasheets/Ultra+Heating+Fabric.pdf"&gt;datasheet&lt;/a&gt;) is used to warm up the temperature inside the incubator. When supplied with 12V, it can reach up to 110°C. It is not necessary to reach this temperature, but it will allow us ...</description><pubDate>Mon, 09 Nov 2020 00:00:00 +0200</pubDate></item><item><title>Incubator v0.1</title><link>https://domingoclub.com/incubator-v0-1.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;Together with my partner &lt;a class="external" href="https://maudb.gitlab.io/dok/"&gt;Maud Bausier&lt;/a&gt;, we are making an incubator.&lt;/p&gt;
&lt;p&gt;As vegans, tempeh (fermeted food in general) is an important part of our diet. It is full of proteins, macrobiotics and it is delicious.&lt;/p&gt;
&lt;p&gt;We started producing our own tempeh when we lived in Amsterdam, where we had a small room dedicated to a boiler, ensuring a constant temperature all year round. But that changed when we moved to Barcelona, where the temperature in the flat is practically the same as the outside temperature, because the windows are almost always open, which involves temperature variations that prevent us from producing the tempeh we love.&lt;/p&gt;
&lt;p&gt;That's why we are making an incubator, called &lt;em&gt;Tempeh Machine&lt;/em&gt;, to help us ferment our delicious food ourselves in all seasons. Our incubator will be entirely made in a Fab Lab, all sources will be available.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;...</description><pubDate>Tue, 03 Nov 2020 00:00:00 +0200</pubDate></item><item><title>Fab stool/bench/table</title><link>https://domingoclub.com/fab-stool-bench-table.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;I wanted to have a stool/bench/table for my apartment, a kind of furniture that can be different things because of its dimensions. So I designed and fabricated it using the large CNC at Fab Lab Barcelona.&lt;/p&gt;
&lt;p&gt;I designed it with parametric values. This process can be useful for everyone, to adapt the furnitures (or anything else) to their needs and the context in which it will be used.&lt;/p&gt;
&lt;h1 id="design"&gt;Design&lt;/h1&gt;
&lt;p&gt;I first designed this project on paper and then in &lt;a class="external" href="https://www.freecadweb.org/"&gt;Freecad&lt;/a&gt;, my favorite open-source software for 3D modeling.&lt;/p&gt;
&lt;p&gt;The stool/bench/table consists of a seat, two legs and a stretcher.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="stool-view-1.png"/&gt;
&lt;img alt="front view" src="stool-view-4.png"/&gt;
&lt;img alt="top view" src="stool-view-5.png"/&gt;&lt;/p&gt;
&lt;h2 id="parametric-values"&gt;Parametric values&lt;/h2&gt;
&lt;p&gt;I used parametric values in order to easily modify values such as the lengths of the seat, the height of the legs, the thickness of the material, the endmill diameter I will use, the length of the slots, etc.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="parametric-values.png"/&gt;&lt;/p&gt;
&lt;p&gt;Once the document is well organised and the values in the part design workbench call up values from the datasheet, changing the values automatically changes the rest. This allows me to design without knowing everything in advance, such as the diameter of the milling cutter that will be used to mill the project, and above all it allows the design to be adapted quickly and almost frictionlessly to new constraints.&lt;/p&gt;
&lt;h2 id="preparing-for-production"&gt;Preparing for production&lt;/h2&gt;
&lt;h3 id="tolerance"&gt;Tolerance&lt;/h3&gt;
&lt;p&gt;It is strongly recommended to take a tolerance value into account when working with a CNC machine. This is because the machine will not ...</description><pubDate>Tue, 06 Oct 2020 00:00:00 +0200</pubDate></item><item><title>CNC machine</title><link>https://domingoclub.com/cnc-machine.html</link><description>&lt;html&gt;&lt;body&gt;&lt;h1 id="introduction"&gt;Introduction&lt;/h1&gt;
&lt;p&gt;For this week's assignement we have to characterise the CNC machine. This was done when we had the opportunity to return to the lab after the lockdown situation due to the COVID-19 pandemic.&lt;/p&gt;
&lt;p&gt;I had a chance to team up with my classmates &lt;a class="external" href="http://academany.fabcloud.io/fabacademy/2020/labs/barcelona/students/tue-ngo/"&gt;Tue Ngo&lt;/a&gt;, &lt;a class="external" href="https://fabacademy.org/2020/labs/barcelona/students/arman-najari/"&gt;Arman Naraji&lt;/a&gt;, &lt;a class="external" href="https://fabacademy.org/2020/labs/barcelona/students/david-prieto/"&gt;David Prieto&lt;/a&gt; and &lt;a class="external" href="https://fabacademy.org/2020/labs/barcelona/students/lynn-dika/"&gt;Lynn Dika&lt;/a&gt; for this group assignment.&lt;/p&gt;
&lt;p&gt;On this page, I will highlight the key point of the process. Tue has detailed everything on her page, please feel free to go there for the full documentation.&lt;/p&gt;
&lt;p&gt;&lt;a class="btn external" href="http://academany.fabcloud.io/fabacademy/2020/labs/barcelona/students/tue-ngo/assignments/week-07-computer-controlled-machining.html"&gt;Full documentation&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;h1 id="personal-notes"&gt;Personal notes&lt;/h1&gt;
&lt;h2 id="software"&gt;Software&lt;/h2&gt;
&lt;p&gt;Unfortunately, Fab Lab Barcelona uses &lt;a class="external" href="https://mecsoft.com/rhinocam/"&gt;RhinoCAM&lt;/a&gt; (~1500€), a plug-in for &lt;a class="external" href="https://www.rhino3d.com/"&gt;Rhino3D&lt;/a&gt; (995€), to perform this task. Paying ~2495€ for a propriatary software that students can't get unless they crack it is a very bad idea for me, especially in the context of Fab Labs. But Fab Lab Barcelona made this choice and configured RhinoCAM with all the necessary parameters to work with the &lt;a class="external" href="https://www.cnc-step.com/milling-machine/"&gt;RaptorX-SL&lt;/a&gt;, the...</description><pubDate>Thu, 01 Oct 2020 00:00:00 +0200</pubDate></item><item><title>Sensing plants activity</title><link>https://domingoclub.com/sensing-plants-activity.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;In the frame of my Fab Academy final project, I'm exploring how to sense the electrical activity of plants.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Listen to what we can observe from this lovely plant" src="IMG_8664.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;I covered this topic on a different article.&lt;/p&gt;
&lt;p&gt;&lt;a class="btn internal" href="green-observatory-input.html"&gt;Sensing plants activity&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;...</description><pubDate>Tue, 15 Sep 2020 00:00:00 +0200</pubDate></item><item><title>Making of the structure</title><link>https://domingoclub.com/structure.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;The structure was designed with &lt;a class="external" href="https://www.freecadweb.org/"&gt;Freecad&lt;/a&gt; and made to be milled with a CNC machine on a 9mm thick plywood panel. The upper disk supports the inflatable part and the lower disk supports the electronics. A 3D printed part ensures the desired angle of the structure.&lt;/p&gt;
&lt;h1 id="design"&gt;Design&lt;/h1&gt;
&lt;p&gt;&lt;img alt="" src="design-01.png"/&gt;
&lt;img alt="" src="design-03.png"/&gt;
&lt;img alt="" src="small:design-02.png"/&gt;
&lt;img alt="" src="small:design-04.png"/&gt;
&lt;img alt="" src="design-06.png"/&gt;&lt;/p&gt;
&lt;p&gt;The keys, the parts that lock the structure, are not straight but have a small angle to be able to drive them into the other part.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Small angle" src="design-07.png"/&gt;
&lt;img alt="" src="small:design-08.png"/&gt;
&lt;img alt="" src="small:design-09.png"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Space for cable management" src="design-10.png:flux"/&gt;
&lt;img alt="3D printed connector" src="design-05.png"/&gt;
&lt;img alt="" src="small:design-11.png"/&gt;
&lt;img alt="" src="small:design-12.png"/&gt;
&lt;img alt="" src="design-13.png"/&gt;&lt;/p&gt;
&lt;h1 id="fabrication"&gt;Fabrication&lt;/h1&gt;
&lt;h2 id="prototype"&gt;Prototype&lt;/h2&gt;
&lt;p&gt;I wanted to see my project out of my computer to make sure I was designing it with good proportions before I cut it with the CNC on a wood board. To do this, I lasercut a tiny prototype on cardboard.&lt;/p&gt;
&lt;p&gt;Cardboard is the cheapest and most environmentally friendly material available in Fab Labs, making it the best material for prototyping.&lt;/p&gt;
&lt;p&gt;That step gave me the "green light" to fabricate my project real size.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Cardboard prototype" src="prototype.jpg"/&gt;&lt;/p&gt;
&lt;h2 id="real-size"&gt;Real size&lt;/h2&gt;
&lt;p&gt;&lt;img alt="" src="cnc-01.jpg"/&gt;
&lt;img alt="" src="cnc-02.jpg"/&gt;&lt;/p&gt;
&lt;h1 id="result"&gt;Result&lt;/h1&gt;
&lt;p&gt;&lt;img alt="" src="result-03.jpg"/&gt;
&lt;img...</description><pubDate>Sun, 18 Oct 2020 00:00:00 +0200</pubDate></item><item><title>Making of the inflatable part</title><link>https://domingoclub.com/inflatable.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;An important part of my final project is the inflatable part, which will help us understand the electrical activity of plants. This part should produce organic movements that react to a flow of air.&lt;/p&gt;
&lt;p&gt;So I have to produce a silicone part that has an air pocket inside that could be inflated and deflated by pushing and pulling a flow of air inside through two pipes (in and out).&lt;/p&gt;
&lt;h1 id="strategy"&gt;Strategy&lt;/h1&gt;
&lt;p&gt;The strategy that Eduardo Chamorro (one of my instructors) and I came up with is to build a mold using a piece of laser-cut acrylic to cast a first layer of silicon and then redo another layer while inserting another piece of acrylic that will allow us to preserve an air pocket inside the cast silicon piece.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Design a structure that can be lasercutted&lt;/li&gt;
&lt;li&gt;Plan which parts will be added and/or removed during the casting process&lt;/li&gt;
&lt;li&gt;Keep in mind how the air will circulate&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="design"&gt;Design&lt;/h1&gt;
&lt;p&gt;I designed the mold using Freecad and parametric values. The shape of this inflatable part is given by the overall &lt;a class="internal" href="green-observatory-structure.html"&gt;structure&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="design-screenshot-1.png"/&gt;
&lt;img alt="" src="design-screenshot-2.png"/&gt;
&lt;img alt="" src="lasercut-plan.png"/&gt;&lt;/p&gt;
&lt;h1 id="fabrication"&gt;Fabrication&lt;/h1&gt;
&lt;h2 id="lasercutting"&gt;Lasercutting&lt;/h2&gt;
&lt;p&gt;The cutting of the &lt;code&gt;5 mm&lt;/code&gt; thick acrylic sheet was very fast. Indeed, nothing fancy here, only cuts.&lt;/p&gt;
&lt;h3 id="settings"&gt;Settings&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;95%&lt;/code&gt; power&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0.45&lt;/code&gt; time&lt;/li&gt;
&lt;li&gt;&lt;code&gt;20000 Hz&lt;/code&gt; frequency&lt;/li&gt;
&lt;/ul&gt;
&lt;video&gt;&lt;source src="inflatable-process-01.mp4"/&gt;&lt;/video&gt;
&lt;p&gt;&lt;img alt="" src="inflatable-process-02.jpg"/&gt;
&lt;img alt="" src="inflatable-process-03.jpg"/&gt;...</description><pubDate>Wed, 07 Oct 2020 00:00:00 +0200</pubDate></item><item><title>Electronics: Output</title><link>https://domingoclub.com/output.html</link><description>&lt;html&gt;&lt;body&gt;&lt;h1 id="introduction"&gt;Introduction&lt;/h1&gt;
&lt;p&gt;An electronic board that receives signals from &lt;a class="internal" href="green-observatory-input.html"&gt;an input&lt;/a&gt; and controls an air fhigh using an air pump and four solenoids.&lt;/p&gt;
&lt;p&gt;Note that this project is inspired by &lt;a class="external" href="https://www.programmableair.com/"&gt;Programmable Air&lt;/a&gt;, I simplified it by using one pump instead of two. Once again, thanks to open-source :)&lt;/p&gt;
&lt;p&gt;&lt;img alt="First sketch" src="schema.jpg"/&gt;&lt;/p&gt;
&lt;h1 id="key-electronics-components"&gt;Key electronics components&lt;/h1&gt;
&lt;h2 id="air-pump"&gt;Air pump&lt;/h2&gt;
&lt;p&gt;The &lt;a class="external" href="https://www.sparkfun.com/products/10398"&gt;air pump&lt;/a&gt; operates at 12V and has sufficient suction for my project. The only drawback is that it is very noisy. It will not produce the complete meditative experience I am looking for, but it will work for this first prototype. This pump was available at the lab.&lt;/p&gt;
&lt;h2 id="solenoids"&gt;Solenoids&lt;/h2&gt;
&lt;p&gt;The four CJV23 solenoids (&lt;a class="internal" href="file:CJV23.pdf"&gt;datasheet&lt;/a&gt;) are the same as those used in the Programmable Air project. I took it as a reference because it's not so easy to find valves for air circuits (and not for water). I found them on &lt;a class="external" href="https://www.ebay.es/itm/324162624034"&gt;ebay&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="buck-boost"&gt;Buck-boost&lt;/h2&gt;
&lt;p&gt;I use a buck-boost from &lt;a class="external" href="https://www.adafruit.com/product/2190"&gt;Adrafuit&lt;/a&gt; (which was available at the lab) to convert 12V (input) to 5V (output). this alhighs me to power the high voltage circuit from this high voltage board.&lt;/p&gt;
&lt;h1 id="design"&gt;Design&lt;/h1&gt;
&lt;p&gt;I design electronics boards with &lt;a class="external" href="https://kicad-pcb.org/"&gt;KiCad&lt;/a&gt;, a cross platform and open source electronics design ...</description><pubDate>Mon, 12 Oct 2020 00:00:00 +0200</pubDate></item><item><title>Electronics: Input</title><link>https://domingoclub.com/input.html</link><description>&lt;html&gt;&lt;body&gt;&lt;h1 id="introduction"&gt;Introduction&lt;/h1&gt;
&lt;p&gt;An electronic board (low power, 5V) that receives signals from a plant via electrodes placed on its leaves and sends instructions to &lt;a class="internal" href="green-observatory-output.html"&gt;another board&lt;/a&gt; dedicated to the outputs (low power, 12 V). Calculations are performed by a ATmega 16-U2 microchip. The data can be read on a computer via USB.&lt;/p&gt;
&lt;h2 id="research"&gt;Research&lt;/h2&gt;
&lt;p&gt;I have previously researched and created a prototype of what could be an easy setup to (try) listen to the electrical activity of plants. I did this using an Arduino Uno and a 555 IC timer on a breadboard. You can read more on the page dedicated to this topic.&lt;/p&gt;
&lt;p&gt;&lt;a class="btn internal" href="final-project-research-input-plant-activity.html"&gt;Research / Sensing the electrical activity of a plant&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I don't know how relevant the data I collect is though, but I feel that detecting any kind of electrical activity from a plant is good for my project.&lt;/p&gt;
&lt;p&gt;Don't forget that the main idea of my project is to invite humans to observe nature and to get closer to it. I am not looking for scientific accuracy at all costs, although I would ideally like to achieve it.&lt;/p&gt;
&lt;p&gt;&lt;img alt="First prototype" src="large:prototype.jpg:flux"/&gt;&lt;/p&gt;
&lt;h1 id="key-electronics-components"&gt;Key electronics components&lt;/h1&gt;
&lt;h2 id="atmega-16-u2"&gt;ATmega 16-U2&lt;/h2&gt;
&lt;p&gt;After some discussions with my instructors at Fab Lab Barcelona, I decided to test the (poorly documented) &lt;code&gt;ATmega 16-U2&lt;/code&gt; chip. It is available in the lab inventory, it speaks USB, has the minimum requirements for my project (and this is the microchip used in the Arduino Uno to exchange data via USB). I always prefer to use appropriate hardware, and especially in this context of...</description><pubDate>Mon, 12 Oct 2020 00:00:00 +0200</pubDate></item><item><title>The Green Observatory</title><link>https://domingoclub.com/green-observatory.html</link><description>&lt;html&gt;&lt;body&gt;&lt;h1 id="introduction"&gt;Introduction&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;The Green Observatory&lt;/em&gt;, my Fab Academy final project, is a device that listens to the electrical activity of plants and represents it with a physical and meditative movement that we, humans, can observe and contemplate.&lt;/p&gt;
&lt;p&gt;I designed, fabricated, programmed and documented this project in Barcelona in 2020. I used open-source software only and so are all my design and fabrication files.&lt;/p&gt;
&lt;h1 id="presentation"&gt;Presentation&lt;/h1&gt;
&lt;video&gt;&lt;source src="presentation-compressed.mp4"/&gt;&lt;/video&gt;
&lt;p&gt;&lt;img alt="" src="result-03.jpg"/&gt;
&lt;img alt="" src="result-02.jpg"/&gt;
&lt;img alt="" src="structure.jpg"/&gt;&lt;/p&gt;
&lt;h1 id="thanks"&gt;Thanks&lt;/h1&gt;
&lt;p&gt;This project wouldn't have been possible without the precious help of my Fab Academy instructors, Oscar Gonzalez, Eduardo Chamorro Martin and Josep Martí, muchas gracias!&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;...</description><pubDate>Mon, 15 Jun 2020 00:00:00 +0200</pubDate></item><item><title>Structure: design and fabrication</title><link>https://domingoclub.com/fp-structure.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;&lt;img alt="structure overview" src="structure-overview-01.png"/&gt;
&lt;img alt="structure detail" src="structure-detail-01.png"/&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;...</description><pubDate>Tue, 02 Jun 2020 00:00:00 +0200</pubDate></item><item><title>Machine design</title><link>https://domingoclub.com/machine-design.html</link><description>&lt;html&gt;&lt;body&gt;&lt;h1 id="introduction"&gt;Introduction&lt;/h1&gt;
&lt;p&gt;For the Machine Design week at the Fab Academy, we were asked to make a machine of any type, but one that we could operate and automate. I teamed up with &lt;a class="external" href="https://fabacademy.org/2020/labs/barcelona/students/benjamin-scott/"&gt;Benjamin Scott&lt;/a&gt; and we decided to go for a machine that plays Pong again itself. We call it the &lt;em&gt;Pong Machine&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;First of all, we had to find out how to make the machine we had in mind, which was not easy when we launched this project in June 2020, towards the official end of the Academy. A few months later, as the Covid-19 crisis subsides, we have a better understanding of the tools we have in the lab, how the mechanics work, what we have to produce by ourselves and what we can take from others.&lt;/p&gt;
&lt;p&gt;I'm very happy with the way our project went, even if we didn't reach the final stage we were aiming for: Our machine doesn't play pong. But it can move its pallet according to the position of the ball, which is already something great for us. More time and testing could help us to develop the final version of our machine, perhaps in the near future? Let's see how it goes.&lt;/p&gt;
&lt;video&gt;&lt;source src="metal-ball-compressed.mp4"/&gt;&lt;/video&gt;
&lt;video&gt;&lt;source src="working-prototype-compressed.mp4"/&gt;&lt;/video&gt;
&lt;p&gt;You can find our full documentation on our specific &lt;em&gt;Pong Machine&lt;/em&gt; website.&lt;/p&gt;
&lt;p&gt;&lt;a class="btn external" href="http://academany.fabcloud.io/fabacademy/2020/labs/barcelona/barcelona-machines/pong-machine/"&gt;Full documentation&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="task-management"&gt;Task management&lt;/h1&gt;
&lt;p&gt;With Benjamin, we did almost the whole project together because it was easier for us to learn the different steps together and help each other in real time. It's certainly not t...</description><pubDate>Tue, 10 Nov 2020 00:00:00 +0200</pubDate></item><item><title>Sensing the electrical activity of a plant</title><link>https://domingoclub.com/input-plant-activity.html</link><description>&lt;html&gt;&lt;body&gt;&lt;h1 id="introduction"&gt;Introduction&lt;/h1&gt;
&lt;p&gt;I selected two projects, related to mine, that listen to the electrical activity of plant in order to produce music (or at least sounds). They both are very useful for the understanding, design and fabrication of the sensing part of my project.&lt;/p&gt;
&lt;h1 id="references"&gt;References&lt;/h1&gt;
&lt;p&gt;The first is &lt;a class="external" href="http://lessnullvoid.cc/content/2011/10/pulsum-plantae/"&gt;Pulsum Plantae&lt;/a&gt; (&lt;a class="external" href="https://github.com/Lessnullvoid/Pulsum-Plantae"&gt;Github project&lt;/a&gt;). This project amplifies the low voltage of a plant to make it readable, then converts it into an interactive installation that makes sounds. Leslie Garcia, Thiago Hersan, and Paloma López (the artists) have opened the sources of their project to make it accessible to people like me, allowing me to learn how things work and what could be a technical solution for this specific project.&lt;/p&gt;
&lt;p&gt;The other comes from &lt;a class="external" href="http://philadelphia.thedelimagazine.com/9336/fyi-on-diys-phl-data-garden"&gt;Data Garden&lt;/a&gt; and their &lt;a class="external" href="https://www.midisprout.com/"&gt;Midi Sprout&lt;/a&gt;. Midi Sprout is a device that converts the electrical activity of plants into midi signals that you can send to any device such as synthetizers in order to produce musical melodies made by plants. The project isn't open-source but, fortunately for me, someone (&lt;a class="external" href="https://github.com/electricityforprogress"&gt;Sam Cusumano&lt;/a&gt;) open-sourced the electronic part of it to make it accessible to all. It can be found &lt;a class="external" href="https://www.instructables.com/id/Biodata-Sonification/"&gt;here&lt;/a&gt; and &lt;a class="external" href="https://github.com/electricityforprogress/BiodataSonificationBreadboardKit"&gt;there&lt;...</description><pubDate>Mon, 01 Jun 2020 00:00:00 +0200</pubDate></item><item><title>Wildcard</title><link>https://domingoclub.com/wildcard.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;For this week's assignement, we were asked to design and produce something with a digital fabrication process that is not covered by any other assignment.&lt;/p&gt;
&lt;p&gt;I decided to present the fabrication of an inflatable part. This was documented as part of my final project. You can find its content on the page dedicated to it.&lt;/p&gt;
&lt;p&gt;&lt;a class="btn internal" href="green-observatory-inflatable.html"&gt;Making of the inflatable part&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="inflatable-result.jpg"/&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;...</description><pubDate>Wed, 07 Oct 2020 00:00:00 +0200</pubDate></item><item><title>Multiple oloids</title><link>https://domingoclub.com/multiple-oloids.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;&lt;img alt="" src="oloid-model.png:flux"/&gt;&lt;/p&gt;
&lt;p&gt;Remember the oloid I printed during the &lt;a class="internal" href="3D-scanning-printing-oloid-shape.html"&gt;3D printing&lt;/a&gt; week?
For this &lt;em&gt;Molding &amp;amp; Casting&lt;/em&gt; week, I'm going to mold an oloid and to cast it in the variety of materials that we have here, in Fab Lab Barcelona.&lt;/p&gt;
&lt;h1 id="mold-design"&gt;Mold design&lt;/h1&gt;
&lt;p&gt;The molding and casting workflow consists of:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Milling a positive version of the desired object into a block of wax&lt;/li&gt;
&lt;li&gt;Filling it with silicon to get a negative (and flexible) mold&lt;/li&gt;
&lt;li&gt;Filling the previously made mold with another type of silicon or resin to get the final (and positive) object.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I'll use the oloid model I already did as a starting point.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="mold-freecad.png"/&gt;&lt;/p&gt;
&lt;p&gt;The main idea is to model the wax block according to its actual dimensions &lt;code&gt;88mm * 36mm * 146mm&lt;/code&gt;, make a pocket to host half of the desired object, add guides and pouring holes.&lt;/p&gt;
&lt;p&gt;Then, because my oloid is symmetrical and because it fits into the wax block, I could duplicate what I did to make both sides of the mold at the same time. If the wax block had been smaller, I would have milled once and made two molds with the same wax block.&lt;/p&gt;
&lt;h2 id="guides"&gt;Guides&lt;/h2&gt;
&lt;p&gt;I added guides to the model so that I could easily close the two sides together, making sure they are in the perfect position.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="mold-detail-1.png"/&gt;&lt;/p&gt;
&lt;h2 id="pouring-hole-and-air-flow"&gt;Pouring hole and air flow&lt;/h2&gt;
&lt;p&gt;I had to add two holes to the model, one to pour the material into the mold and the second to allow the air to escape. Without the second, it would be almost impossible to pour the material into the enclosed space.&lt;/p&gt;
&lt;p&gt;&lt;img a...</description><pubDate>Tue, 06 Oct 2020 00:00:00 +0200</pubDate></item><item><title>Molding and casting</title><link>https://domingoclub.com/molding-casting.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;For this week's assignment, I will design and mill a two-sided mold to make multiple oloids using the &lt;em&gt;molding and casting&lt;/em&gt; technique. As part of the group assignment, I will explore various materials, which unfortunately I cannot do as a group due to this strange period of the COVID-19 pandemic.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;...</description><pubDate>Wed, 13 May 2020 00:00:00 +0200</pubDate></item><item><title>Networking and communications</title><link>https://domingoclub.com/networking-communications.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;For this week's assignment, I will connect two &lt;a class="external" href="http://esp8266.net"&gt;ESP8266&lt;/a&gt; / &lt;a class="external" href="https://www.nodemcu.com/index_en.html"&gt;NodeMCU&lt;/a&gt; together on the WiFi network and exchange data between them.&lt;/p&gt;
&lt;p&gt;Understanding the basics of networking and how communication between devices works will be highly beneficial for my final project.&lt;/p&gt;
&lt;video&gt;&lt;source src="network-communication.mp4"/&gt;&lt;/video&gt;
&lt;p&gt;I decided to keep it simple to have a working example easily reproducible, without project-specific elements that make the code more complex. Therefore, the interaction must be basic: press a button on one side and light a led on the other side.&lt;/p&gt;
&lt;h1 id="hardware"&gt;Hardware&lt;/h1&gt;
&lt;p&gt;I'm using two &lt;a class="external" href="https://www.nodemcu.com/index_en.html"&gt;NodeMCU&lt;/a&gt; equipped with &lt;a class="external" href="http://esp8266.net"&gt;ESP8266&lt;/a&gt; chips, mounted on a breadboard to facilitate the prototyping phase. The first NodeMCU, the &lt;em&gt;server&lt;/em&gt;, has a LED connected to its pin &lt;code&gt;4&lt;/code&gt; (d2). The second NodeMCU, the &lt;em&gt;client&lt;/em&gt;, has a push-button connected to its pin &lt;code&gt;4&lt;/code&gt; (d2). The WiFi network is prodived through my home router.&lt;/p&gt;
&lt;p&gt;&lt;img alt="NodeMCUv1.0-pinout.jpg" src="NodeMCUv1.0-pinout.jpg"/&gt;
(&lt;a class="external" href="https://www.teachmemicro.com/nodemcu-pinout/"&gt;image source&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;img alt="setup" src="setup.jpg"/&gt;&lt;/p&gt;
&lt;h1 id="software"&gt;Software&lt;/h1&gt;
&lt;h2 id="project-structure"&gt;Project structure&lt;/h2&gt;
&lt;p&gt;As I use PlatformIO to program my boards, the configuration of a project is fairly straightforward. I need one folder per board and an additional folder that wraps the two subfolders.&lt;/p&gt;
&lt;pre&gt;
networking-project/
- node-client/
- node-server/
&lt;/pre&gt;
&lt;p&gt;Initiate each node project &lt;...</description><pubDate>Wed, 06 May 2020 00:00:00 +0200</pubDate></item><item><title>References and related projects</title><link>https://domingoclub.com/fp-references.html</link><description>&lt;html&gt;&lt;body&gt;&lt;h2 id="concept"&gt;Concept&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class="external" href="https://www.media.mit.edu/projects/elowan-a-plant-robot-hybrid/overview/"&gt;Elowan (MIT Media Lab)&lt;/a&gt;
  is a cybernetic lifeform, a plant in direct dialogue with a machine. Using its own internal
  electrical signals, the plant is interfaced with a robotic extension that drives it toward light.&lt;/li&gt;
&lt;li&gt;&lt;a class="external" href="https://hackaday.io/project/134172-plantoid"&gt;Plantoid&lt;/a&gt;, an hybrid with actuators and electrical
  potential sensing for plant control.&lt;/li&gt;
&lt;li&gt;&lt;a class="external" href="https://backyardbrains.com/products/plantspikerbox"&gt;the Plant SpykerBox&lt;/a&gt;, a device that records and visualizes the signals emitted by plants offering users the unique opportunity to peer into the fascinating world of plant signaling and plant behaviors.&lt;/li&gt;
&lt;li&gt;&lt;a class="external" href="https://colinhonigman.com/Cultivating-Frequencies"&gt;Cultivating Frequencies&lt;/a&gt; transforms a garden into an interactive and generative musical installation by analyzing data from the garden and translating them into musical components.&lt;/li&gt;
&lt;li&gt;&lt;a class="external" href="http://www.iaacblog.com/programs/phytosense/"&gt;The PhytoSense façade system&lt;/a&gt; is an interactive green facade that uses swept frequency capacitive sensing to play with light depending on touch.&lt;/li&gt;
&lt;li&gt;&lt;a class="external" href="https://www.plantwave.com/"&gt;Plant Wave&lt;/a&gt;: Tune into nature and listen to the music of plants.&lt;/li&gt;
&lt;li&gt;&lt;a class="external" href="https://www.instruomodular.com/product/scion/"&gt;SCÍON&lt;/a&gt; is a biofeedback sensor built into a quad random voltage generator.&lt;/li&gt;
&lt;li&gt;&lt;a class="external" href="http://lessnullvoid.cc/content/2011/10/pulsum-plantae/"&gt;Pulsum Plantae&lt;/a&gt; (&lt;a class="external" href="https://github.com/Lessnullvoid/Puls...</description><pubDate>Fri, 01 May 2020 00:00:00 +0200</pubDate></item><item><title>Invention, intellectual property, and income</title><link>https://domingoclub.com/invention.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;For the week's assignment, I was asked to develop a dissemination plan for my final project. I'll try to explain my vision for open-source hardware and software, and why I find them absolutely necessary.&lt;/p&gt;
&lt;h1 id="grow-an-audience"&gt;Grow an audience&lt;/h1&gt;
&lt;p&gt;I think one of the characteristics of a good project is that it spreads by itself. Explaining your project to your peers will allow them, if they find it as interesting as you think it is, to spread it into their circle. This will indirectly expand your audience.&lt;/p&gt;
&lt;p&gt;If your local audience isn't responsive to your project, find another place to talk about it. Internet is filled with tiny niches that could extend your message. &lt;a class="external" href="https://joinmastodon.org/"&gt;Mastodon&lt;/a&gt;, for example, is a decentralized social network full of interesting people who believe in alternative networks and open-source projects. This could be a great place to start growing your audience.&lt;/p&gt;
&lt;h1 id="show-the-process"&gt;Show the process&lt;/h1&gt;
&lt;p&gt;But once the audience grows, you need the right tools to maintain it, cultivate it. For me, the tools to achieve this are intangible:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;an honest speech&lt;/li&gt;
&lt;li&gt;a transparent process&lt;/li&gt;
&lt;li&gt;clear intentions&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I don't think an audience can last if it was built on bad marketing decisions or for the sole purpose of enriching the founder of the project. A new project can only find its natural place if its message is honest (&lt;em&gt;why does the project exist?&lt;/em&gt;), its intentions are honest (&lt;em&gt;what is the project for?&lt;/em&gt;) and if the process is transparent (&lt;em&gt;how will the project be in the future?&lt;/em&gt;).&lt;/p&gt;
&lt;h1 id="free-the-sources"&gt;Free the sources&lt;/h1&gt;
&lt;p&gt;The world is changing, so our way of disseminating projects too. I don't believe in ...</description><pubDate>Fri, 18 Sep 2020 00:00:00 +0200</pubDate></item><item><title>My first openFrameworks application</title><link>https://domingoclub.com/first-of-application.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;For my first openFrameworks application, I would like to get sensor data and convert it to an interactive visual and audio piece. I'm going to use the &lt;a class="external" href="https://learn.adafruit.com/adafruit-circuit-playground-express/overview"&gt;Circuit Playground Express&lt;/a&gt; and its multiple integrated sensors and buttons to help me quickly prototype my idea.&lt;/p&gt;
&lt;h1 id="installation"&gt;Installation&lt;/h1&gt;
&lt;p&gt;I first had to install openFrameworks on my machine. Speaking of my machine, I switched from &lt;a class="external" href="https://elementary.io/"&gt;Elementary OS&lt;/a&gt; to &lt;a class="external" href="https://manjaro.org/"&gt;Manjaro&lt;/a&gt; two three weeks ago. I no longer depend on the &lt;a class="external" href="https://en.wikipedia.org/wiki/APT_(software)"&gt;APT&lt;/a&gt; package manager (Advanced Package Tool, from Debian) but from &lt;a class="external" href="https://aur.archlinux.org/"&gt;AUR&lt;/a&gt; (Arch User Repository), from the Arch Linux community.&lt;/p&gt;
&lt;p&gt;My first intention was to look for the openFrameworks package in PAMAC, the graphical AUR package manager for Manjaro Linux, but unfortunately the package is broken there. Which means manual installation is the thing to do. I must say that AUR packages are generally super easy to install, which makes them quite convenient. Too bad this is not the case for openframeworks, and I don't understand enough how it works to lend a hand. Maybe later.&lt;/p&gt;
&lt;p&gt;Fortunately, the openFrameworks &lt;a class="external" href="https://openframeworks.cc/download/"&gt;download&lt;/a&gt; and &lt;a class="external" href="https://openframeworks.cc/setup/linux-install/"&gt;installation&lt;/a&gt; pages are clear enough and the community is very (re)active and helpful. This gives me hope for my future use of this tool.&lt;/p&gt;
&lt;h1 id="project-architecture"&gt;Project architecture...</description><pubDate>Fri, 24 Apr 2020 00:00:00 +0200</pubDate></item><item><title>My coding journey</title><link>https://domingoclub.com/my-coding-journey.html</link><description>&lt;html&gt;&lt;body&gt;&lt;h1 id="processing-java-javascript"&gt;Processing (Java / Javascript)&lt;/h1&gt;
&lt;p&gt;In art school, I had two years of digital art workshops. The main tool we used in this class was &lt;a class="external" href="https://processing.org/"&gt;Processing&lt;/a&gt;. And it was so refreshing. Being able to produce an artistic installation with algorithms was something I was looking for. But it was also the rise of another movement: Internet culture. This quickly made me drop Processing for its javascript version, &lt;a class="external" href="https://p5js.org/"&gt;p5js&lt;/a&gt; and html/css, in order to create websites. It was not really good, Processing (p5js) is not so exciting when it is stuck in a browser. But the mix of graphic design and coding was definitely the right direction for me. I had the insight I needed with Processing and the motivation to continue creating websites, and then to found my web studio.&lt;/p&gt;
&lt;h1 id="javascript"&gt;Javascript&lt;/h1&gt;
&lt;p&gt;In my web studio, I made websites with html/css and Javascript. I used to mainly use &lt;a class="external" href="https://en.wikipedia.org/wiki/JavaScript"&gt;vanilla Javascript&lt;/a&gt; and &lt;a class="external" href="https://vuejs.org/"&gt;Vue.js&lt;/a&gt; to build reactives web interfaces. I always found it tricky and not really intuitive. Even if Javascript is powerful and can do many things, I find that it is also a kind of poison for the web: websites get heavier, they track you more and more, and they need an updated browser to be viewed. It is not a language in which I would like to invest myself more. I would even prefer the Internet without it, without advertising and tracking, filled with lighter websites that run on older browsers.&lt;/p&gt;
&lt;h1 id="python"&gt;Python&lt;/h1&gt;
&lt;p&gt;Then I discovered Python, a language that also has many uses, but outside the browser. I'...</description><pubDate>Thu, 23 Apr 2020 00:00:00 +0200</pubDate></item><item><title>Interface application programming</title><link>https://domingoclub.com/interface-application-programming.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;This week is devoted to programming interfaces and applications, a subject that I really like. I would not say that I am a good programmer, I have little experience. But it's something I love to do: solve logic problems, create software that produces the result I want (or the result I didn't expect, because I also find unexpected things beautiful).&lt;/p&gt;
&lt;p&gt;I'm going to use &lt;a class="external" href="https://openframeworks.cc/"&gt;openFrameworks&lt;/a&gt; to create an interactive audio and visual piece, a kind of experimental musical instrument that reacts to its environment.&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Part of this assignment is also covered with the &lt;a class="internal" href="incubator-v0-1.html"&gt;Incubator&lt;/a&gt; project.&lt;/p&gt;
&lt;p&gt;&lt;a class="btn internal" href="incubator-v0-1.html"&gt;Incubator v0.1&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;...</description><pubDate>Wed, 22 Apr 2020 00:00:00 +0200</pubDate></item><item><title>Prototyping an incubator</title><link>https://domingoclub.com/incubator.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;As I said, my partner is building an incubator to help us grow mycellium (and other fermented food) and she asked me an hand to help her with the electronic part. In this context, I will prototype an incubator by using the devices I already have. I will do it by following the spiral methodology: a first round with the basic features, and then other ones with additional options.&lt;/p&gt;
&lt;h2 id="update-2020-11"&gt;Update 2020-11&lt;/h2&gt;
&lt;p&gt;I have started a new project dedicated to the incubator and the sub-projects it brings. Everything is documented under &lt;a class="internal" href="incubator-v0-1.html"&gt;incubator-v0-1.html&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="incubator-shield.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="btn internal" href="incubator-v0-1.html"&gt;Incubator&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="round-01-the-basics"&gt;Round #01: the basics&lt;/h2&gt;
&lt;p&gt;For the first round, I would like to control a fan and a Peltier (thermoelectric cooler) to get an ideal temperature into a closed space, using a Arduino UNO. The Peltier will be used to warm up the temperature and the fan will help us to either cool down or to distribute the heat evenly.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Thermoelectric coolers (TEC or Peltier) create a temperature differential on each side. One side gets hot and the other side gets cool. Therefore, they can be used to either warm something up or cool something down, depending on which side you use.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class="external" href="https://www.sparkfun.com/products/15082"&gt;Sparkfun - Thermoelectric Cooler&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;The Peltier could be used to warm up or cool down the space depending on the wanted temperature, to do so, we apparently have to reverse its polarity. I will try to explore this track later. I will focus on the warm side for now.&lt;/p&gt;
&lt;p&gt;Because the fan and the ...</description><pubDate>Thu, 16 Apr 2020 00:00:00 +0200</pubDate></item><item><title>Output devices</title><link>https://domingoclub.com/output-devices.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;This week's assignement is about output devices: we are learning how to make various motors work, what are their mechanisms and principles, when and why use a specific one instead of another.&lt;/p&gt;
&lt;p&gt;I'm going to lend a hand to &lt;a class="external" href="https://maudb.gitlab.io/dok/"&gt;Maud Bausier&lt;/a&gt;, my partner, who is building an incubator to grow mycelium or any fermented food (tempeh, sriracha, etc.). I think we could have enough material to finish a prototype at home (covid-19 restrictions).&lt;/p&gt;
&lt;p&gt;The main challenges for the moment concern electronics, which consists of: a thermistor (to know the temperature inside the incubator), a Peltier (to heat it), a fan (to cool it), an LCD screen (to know what's going on) and two push buttons to set the desired temperature inside the incubator.&lt;/p&gt;
&lt;p&gt;&lt;img alt="incubator prototype" src="incubator-overview.jpg"/&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Part of this assignment is also covered on my final project's page.&lt;/p&gt;
&lt;p&gt;&lt;a class="btn internal" href="green-observatory-output.html"&gt;The Green Observatory: Output&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;h1 id="motors"&gt;Motors&lt;/h1&gt;
&lt;p&gt;But first, I needed some basics about motors: a motor is mainly made of coils and magnets. When current goes through a coil, a magnetic field is generated around it. The higher the current, the greater the field. This magnetic field creates polarity which is used to create a rotational force. This force is called &lt;a class="external" href="https://en.wikipedia.org/wiki/Torque"&gt;the torque&lt;/a&gt; and its value depends on the motor's input current. More current implies stronger magnetic field in the coils, that means more attraction/repulsion.&lt;/p&gt;
&lt;p&gt;&lt;img alt="motor coils" src="motor-coils.png"/&gt;
Image source: &lt;a class="external" href="https://itp.nyu.edu/physcomp/lessons/dc-motors/dc-moto...</description><pubDate>Mon, 02 Nov 2020 00:00:00 +0200</pubDate></item><item><title>Sketches and first ideas</title><link>https://domingoclub.com/sketches-ideas.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;This page is where I collect some of my thoughts on my final project idea.&lt;/p&gt;
&lt;h1 id="listen-to-what-the-plants-have-to-say"&gt;Listen to what the plants have to say&lt;/h1&gt;
&lt;p&gt;Plants communicate as we do. But it's hardly noticeable for us because we don't send and receive signals at the same speed as they do. This is why I would like to build a kind of machine that can help any plant to express its needs at a speed that we can actually perceive and understand. Or should I reformulate in a less human-centric way: a machine that can help humans understand what the plants have to say.&lt;/p&gt;
&lt;h1 id="a-machine-that-helps-us-understand-plants"&gt;A machine that helps us understand plants&lt;/h1&gt;
&lt;p&gt;The machine I have in mind is able to get the data from a plant [temperature, light level, air quality, humidity level, nutrient level, vibrations, ?] and transform it into something visual or audible. The machine itself could be small, like a tool that helps humans understand plants in everyday life, or large, as an art installation that invites the public to join a piece of nature, to watch and listen to what it has to say.&lt;/p&gt;
&lt;h1 id="breathing"&gt;Breathing&lt;/h1&gt;
&lt;p&gt;Breathing (or respiration) is a very common process between plants and animals. This is the kind of movement I can use to represent how the plant feels in relation to its environment.&lt;/p&gt;
&lt;p&gt;&lt;img alt="final-project-drawings" src="final-project-drawings.png"/&gt;&lt;/p&gt;
&lt;h1 id="data-visualization"&gt;Data visualization&lt;/h1&gt;
&lt;p&gt;Before trying to understand what's going on between complex structrures such as plants, a good first step for me is to explore and familiarize myself with the data that I can collect about them and their environement, with the tools we have in fablabs and with the process of digital fabrication. Understa...</description><pubDate>Thu, 02 Apr 2020 00:00:00 +0200</pubDate></item><item><title>Applications and implications</title><link>https://domingoclub.com/applications-implications.html</link><description>&lt;html&gt;&lt;body&gt;&lt;h1 id="about-my-final-project"&gt;About my final project&lt;/h1&gt;
&lt;p&gt;For this weeks's assignement, we were asked to answer a series of questions about our final project. I don't really know where I'm going with my project but I guess that's the point of this week: write some very practical facts and see where my main idea goes, and how far I can define it. Let's do that.&lt;/p&gt;
&lt;h2 id="what-will-it-do"&gt;What will it do?&lt;/h2&gt;
&lt;p&gt;I would like to design and fabricate an object that helps us, humans, to listen to plants in order to better understand them and therefore respect them more.&lt;/p&gt;
&lt;p&gt;I've found two majors ways of listening to plants:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Detect their electrical activity and deduce what their reactions are related to.&lt;/li&gt;
&lt;li&gt;Using the data from their environment and deduce if the plant feels well according to what we know of its needs, in terms of light, watering, air temperature, soil temperature, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I think the first option is more intersting than the other one, in the sense that the information will come from the plant itself and not from what we know about it.&lt;/p&gt;
&lt;h2 id="whos-done-what-beforehand"&gt;Who's done what beforehand?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class="external" href="https://www.media.mit.edu/projects/elowan-a-plant-robot-hybrid/overview/"&gt;Elowan (MIT Media Lab)&lt;/a&gt;
  is a cybernetic lifeform, a plant in direct dialogue with a machine. Using its own internal
  electrical signals, the plant is interfaced with a robotic extension that drives it toward light.&lt;/li&gt;
&lt;li&gt;&lt;a class="external" href="https://hackaday.io/project/134172-plantoid"&gt;Plantoid&lt;/a&gt;, an hybrid with actuators and electrical
  potential sensing for plant control.&lt;/li&gt;
&lt;li&gt;&lt;a class="external" href="https://backyardbrains.com/products/plantspikerbox"&gt;the Plant SpykerBox&lt;/a&gt;...</description><pubDate>Thu, 17 Sep 2020 00:00:00 +0200</pubDate></item><item><title>Moisture level sensor</title><link>https://domingoclub.com/moisture-sensor.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;Water is a conductive element, and the more water there is in the soil the more electricity can flow through it. So, in order to measure the soil moisture level, we can integrate it into an electrical circuit and measure the voltage. The more voltage in the circuit, the more water there is in the soil.&lt;/p&gt;
&lt;p&gt;&lt;img alt="moist-setup" src="moist-setup.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;To represent it, I built a small system that lights a green LED when the soil is wet and a red LED when it's dry.&lt;/p&gt;
&lt;h2 id="connection"&gt;Connection&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;5V from the Arduino UNO to the soil&lt;/li&gt;
&lt;li&gt;A0 (anaolog) from the Arduino UNO to the soil&lt;/li&gt;
&lt;li&gt;A0 (analog) from the Arduino UNO to the GND (analog) through a 10kΩ resistor&lt;/li&gt;
&lt;li&gt;11 (digital) to the red LED through a 220Ω resistor&lt;/li&gt;
&lt;li&gt;12 (digital) to the green LED through a 220Ω resistor&lt;/li&gt;
&lt;li&gt;LED's to the GND (digital)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="moist-closeup" src="moist-closeup.jpg"/&gt;&lt;/p&gt;
&lt;h2 id="code"&gt;Code&lt;/h2&gt;
&lt;p&gt;The code is basic. If the analog pin gets a high voltage, it means that the soil is moist and the plant is &lt;em&gt;happy&lt;/em&gt; so we turn on the green LED, and vice versa.&lt;/p&gt;
&lt;p&gt;I plan to write a more complex code in the coming weeks, a code that takes into account the amount of water needed for each specific plant, and to alert when it's too dry &lt;em&gt;or&lt;/em&gt; too weet.&lt;/p&gt;
&lt;pre&gt;
int ledGreen = 12;
int ledRed = 11;
int contactVal = 0;

void setup() {
  Serial.begin(9600);
  pinMode(ledGreen, OUTPUT);
  pinMode(ledRed, OUTPUT);
}

void loop() {
  contactVal = analogRead(0);
  Serial.println(contactVal);
  if (contactVal &amp;gt;= 350) {
    digitalWrite(ledRed, LOW);
    digitalWrite(ledGreen, HIGH);
  } else {
    digitalWrite(ledRed, HIGH);
    digitalWrite(ledGreen, LOW);
  }
  delay(250);
}
&lt;/pre&gt;
&lt;p&gt;Here is my tiny sys...</description><pubDate>Sat, 28 Mar 2020 00:00:00 +0200</pubDate></item><item><title>Thermistor</title><link>https://domingoclub.com/thermistor.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;Or how to measure temperature using a resistor.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To measure the temperature, we need to measure the resistance. However, a microcontroller does not have a resistance-meter built in. Instead, it only has a voltage reader known as a analog-digital-converter. So what we have to do is convert the resistance into a voltage, and we will do that by adding another resistor and connecting them in series. Now you just measure the voltage in the middle, as the resistance changes, the voltage changes too, according to the simple voltage-divider equation. We just need to keep one resistor fixed&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Analog Voltage Reading Method, &lt;a class="external" href="https://learn.adafruit.com/thermistor/using-a-thermistor"&gt;Adafruit&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="thermo-photo-1" src="uno-thermo-photo-1.jpg"/&gt;
&lt;img alt="thermo-photo-2" src="uno-thermo-photo-2.jpg"/&gt;&lt;/p&gt;
&lt;h2 id="connection"&gt;Connection&lt;/h2&gt;
&lt;p&gt;The thermistor is linked to the &lt;code&gt;GND&lt;/code&gt;, and to the analog pin &lt;code&gt;0&lt;/code&gt; and to the &lt;code&gt;5V&lt;/code&gt; pin through a 10 resistor.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="thermistor-setup.png"/&gt;&lt;/p&gt;
&lt;p&gt;(&lt;a class="external" href="https://computers.tutsplus.com/tutorials/how-to-read-temperatures-with-arduino--mac-53714"&gt;image source&lt;/a&gt;)&lt;/p&gt;
&lt;h2 id="code"&gt;Code&lt;/h2&gt;
&lt;p&gt;Here is the piece of code that print the value of the analog pin &lt;code&gt;0&lt;/code&gt; and convert its values into a Celcius temperature value.&lt;/p&gt;
&lt;pre&gt;
#include &amp;lt;Arduino.h&amp;gt;
#include &amp;lt;math.h&amp;gt;

void setup()
{
  Serial.begin(9600);
}

// Function that applies the Steinhart-Hart equation
float thermistor(int val)
{
  float temp;
  // From raw analog values
  temp = log(((10240000 / val) - 10000));
  // To Kelvin values
  temp = 1 / (0.001129148 + (0.000234125 + (0.00...</description><pubDate>Sat, 09 Jan 2021 00:00:00 +0200</pubDate></item><item><title>Ultrasonic sensor HC-SR04</title><link>https://domingoclub.com/ultrasonic-sensor.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;The ultrasonic sensor HC-SR04 provides 2Cm to 400cm of non-contact measurement functionality with a ranging accuracy that can reach up to 3mm. Here is its &lt;a class="external" href="https://cdn.sparkfun.com/datasheets/Sensors/Proximity/HCSR04.pdf"&gt;datasheet&lt;/a&gt;. This sensor has 4 pins that we have to connect to our dev board.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;5V supply&lt;/li&gt;
&lt;li&gt;Trigger Pulse Input&lt;/li&gt;
&lt;li&gt;Echo Pulse Output&lt;/li&gt;
&lt;li&gt;GND&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="uno-ultrasonic-inuse" src="uno-ultrasonic-inuse.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;I'm using an Arduino UNO to use this sensor because it needs a voltage of 5V. Unfortunately, the Barduino and its ESP32 only has a voltage of 3.3V.&lt;/p&gt;
&lt;h2 id="connection"&gt;Connection&lt;/h2&gt;
&lt;p&gt;The connection is quite simple, the &lt;code&gt;VCC&lt;/code&gt; goes to the &lt;code&gt;5V&lt;/code&gt;, the &lt;code&gt;GND&lt;/code&gt; to the &lt;code&gt;GND&lt;/code&gt;, the &lt;code&gt;Echo&lt;/code&gt; to a digital pin, let's say the &lt;code&gt;12&lt;/code&gt; and the &lt;code&gt;Trig&lt;/code&gt; to another digital pin, the &lt;code&gt;11&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="uno-ultrasonci-schematic" src="uno-ultrasonic.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;(&lt;a class="external" href="https://randomnerdtutorials.com/complete-guide-for-ultrasonic-sensor-hc-sr04/"&gt;image source&lt;/a&gt;)&lt;/p&gt;
&lt;h2 id="code"&gt;Code&lt;/h2&gt;
&lt;p&gt;Here is the basic code to read data from the ultrasonic sensor, to convert them into readable values (cm) and print it on the serial monitor.&lt;/p&gt;
&lt;p&gt;To quickly create a &lt;a class="external" href="https://platformio.org/"&gt;PlatformIO&lt;/a&gt; project for the Arduino UNO, open a terminal and navigate to a freshly created folder and type &lt;code&gt;$ pio project init --board uno&lt;/code&gt;. As simple as that.&lt;/p&gt;
&lt;p&gt;Create in new &lt;code&gt;main.cpp&lt;/code&gt; file into the &lt;code&gt;src&lt;/code&gt; folder.&lt;/p&gt;
&lt;pre&gt;
int trigPin = 11;
int echoPin = 12;
long duration, cm;

void setup() {
  Serial.begin(9600);
  pinMode...</description><pubDate>Thu, 26 Mar 2020 00:00:00 +0200</pubDate></item><item><title>Input devices</title><link>https://domingoclub.com/input-devices.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;Let's play with sensors.&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Part of this assignment is also covered on my final project's page.&lt;/p&gt;
&lt;p&gt;&lt;a class="btn internal" href="green-observatory-input.html"&gt;The Green Observatory: Input&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;...</description><pubDate>Mon, 02 Nov 2020 00:00:00 +0200</pubDate></item><item><title>Arduino IDE</title><link>https://domingoclub.com/arduino-ide.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;One can also use Arduino IDE to load a piece of code into a device. It works perfectly well even if this solution is more basic and doesn't allow a lot of fine tuning. Because this software is well maintained and massively used, it makes it a very good tool for quickly prototyping without detours.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a class="external" href="https://www.arduino.cc/en/Main/Software"&gt;Download Arduino IDE&lt;/a&gt; and install it on you computer&lt;/li&gt;
&lt;li&gt;Find and install the Circuit Playground library with the built-in &lt;code&gt;Boards Manager&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Verify the code&lt;/li&gt;
&lt;li&gt;Upload the code&lt;/li&gt;
&lt;/ol&gt;&lt;/body&gt;&lt;/html&gt;...</description><pubDate>Mon, 23 Mar 2020 00:00:00 +0200</pubDate></item><item><title>PlatformIO</title><link>https://domingoclub.com/platformio.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;&lt;a class="external" href="https://platformio.org/"&gt;PlatformIO&lt;/a&gt; is a cross-platform, cross-architecture and multiple framework tool for embedded programming. It replaces Arduino IDE and offers a lot more subtilities and flexibility to write organized code for micro-controllers.&lt;/p&gt;
&lt;p&gt;I use PlatformIO as a replacement for Arduino IDE because it allows me to use the text editor I want (I use &lt;a class="external" href="https://neovim.io/"&gt;Neovim&lt;/a&gt;, an hyperextensible Vim-based text editor) and because it integrates librairies of more than 700 differents boards, including the ones I use. It also has a unified debugger and a static code analyze which seems super useful for large scale projects.&lt;/p&gt;
&lt;h3 id="initialization"&gt;Initialization&lt;/h3&gt;
&lt;p&gt;Because PlatformIO is based on Python, the installation is pretty straight-forward using &lt;em&gt;pip&lt;/em&gt;: &lt;code&gt;$ pip install -U platformio&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;An empty folder to host the project is needed for PlatformIO to set up its environment. Make a new one and go in it &lt;code&gt;$ mkdir my-project &amp;amp;&amp;amp; cd my-project&lt;/code&gt; then type &lt;code&gt;$ pio init&lt;/code&gt; to initialize this folder with the PlatformIO structure.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;pio&lt;/code&gt; is the the shortcut for &lt;code&gt;platformio&lt;/code&gt;, it's the exact same thing but shorter&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Then the structure should look like this:&lt;/p&gt;
&lt;pre&gt;
platformio.ini
src/
- main.cpp
- main.h
- …
lib/
- input/
- - input.cpp
- - input.h
- - …
- output/
- - output.cpp
- - output.h
- - …
boards/
- board_definition.json
&lt;/pre&gt;
&lt;p&gt;Next, search for the depedencies ID you might need, in this case the &lt;code&gt;Adafruit_CircuitPlayground.h&lt;/code&gt;, by typing &lt;code&gt;$ pio lib search "header:Adafruit_CircuitPlayground.h"&lt;/code&gt;. The lib ID I need is &lt;code&gt;602&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Config...</description><pubDate>Sun, 22 Mar 2020 00:00:00 +0200</pubDate></item><item><title>Programming the ESP32 — Barduino</title><link>https://domingoclub.com/esp32-barduino.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;We have been asked to assemble a Barduino few hours before the lab lockdown due to the coronavirus, in order to be able to experiment with it later at home.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Barduino 2.0 started as a project to have a ESP32 fabacademy compatible board to help the students develope their work on top of it. This board was designed by Eduardo Chamorro Martin with the help of Josep Marti and Oscar Gonzalez in Fab Lab Barcelona 2020.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class="external" href="https://gitlab.fabcloud.org/barcelonaworkshops/barduino-2.0"&gt;Barduino 2.0, Gitlab&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="arduino-pic" src="barduino-pic.jpeg"/&gt;&lt;/p&gt;
&lt;p&gt;To use that board with PlatformIO, &lt;code&gt;pio init&lt;/code&gt; a new project specifically for the ESP32 chip.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ pio project init --board esp32-devkitlipo&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This command generates the &lt;code&gt;platformio.ini&lt;/code&gt; files with the desired values.&lt;/p&gt;
&lt;pre&gt;
[env:esp32-devkitlipo]
platform = espressif32
board = esp32-devkitlipo
framework = arduino
&lt;/pre&gt;
&lt;h2 id="pinout"&gt;Pinout&lt;/h2&gt;
&lt;p&gt;&lt;img alt="arduino-pinouts" src="large:barduino-pinouts.png"/&gt;&lt;/p&gt;
&lt;p&gt;Then, as we can see on the datasheet, the ID of the programmable test LED is &lt;code&gt;13&lt;/code&gt;. We can use it to test if our board and our configuration work properly.&lt;/p&gt;
&lt;h2 id="programmer-slider-switch"&gt;Programmer slider switch&lt;/h2&gt;
&lt;p&gt;Also, there is a &lt;em&gt;Programmer Slider Switch&lt;/em&gt; that changes the behaviour of the chip and tells it wheter it's in programming mode or execution mode. Obviously, we have to turn it to the left, the programming mode, before uploading our program.&lt;/p&gt;
&lt;h2 id="blink-program"&gt;Blink program&lt;/h2&gt;
&lt;p&gt;Using PIN 13, as seen above.&lt;/p&gt;
&lt;pre&gt;
 #include &lt;arduino.h&gt;

 int led_in = 13;

 void setup() {
   pinMode(led_in, OUTPUT...</description><pubDate>Sat, 21 Mar 2020 00:00:00 +0200</pubDate></item><item><title>Programming the ATtiny1614</title><link>https://domingoclub.com/attiny1614.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;The ATtiny1614 isn't yet supported by PlatformIO and therefore needs another method to be programmed. Fortunately, &lt;a class="external" href="https://github.com/mraardvark/pyupdi"&gt;pyupdi&lt;/a&gt; is here! Pyupdi is a Python UPDI driver for programming the "new" tinyAVR and megaAVR devices.&lt;/p&gt;
&lt;h2 id="connectivity"&gt;Connectivity&lt;/h2&gt;
&lt;p&gt;Power comes from a USB cable via a FTDI connector. The data comes from the UPDI connector and goes through another FTDI connector.&lt;/p&gt;
&lt;h2 id="install"&gt;Install&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;git clone https://github.com/mraardvark/pyupdi&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pip install -r requirements.txt&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="compile"&gt;Compile&lt;/h2&gt;
&lt;p&gt;The first thing to do is to compile the code with the Arduino IDE and then send it with &lt;code&gt;pyupdi&lt;/code&gt;.
To be able to compile the code, first install the &lt;a class="external" href="https://github.com/SpenceKonde/megaTinyCore"&gt;megaTinyCore&lt;/a&gt; library using the Libraries manager into the Arduino IDE and select the ATtiny1614 board.&lt;/p&gt;
&lt;p&gt;From the Arduini IDE console, locate the &lt;code&gt;.ino.hex&lt;/code&gt; that is generated when you compile and copy its path. It should be something like &lt;code&gt;/tmp/arduino_build_342195/Blink.ino.hex&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id="upload"&gt;Upload&lt;/h2&gt;
&lt;p&gt;Once your program is correctly compiled, open a terminal to send it to your device.&lt;/p&gt;
&lt;p&gt;First, run &lt;code&gt;ls /dev/* | greb usb&lt;/code&gt; to know the name of your port. It should look like &lt;code&gt;/dev/ttyUSB0&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Then, run pyupdi with the name of the board you're working on &lt;code&gt;tiny1614&lt;/code&gt;, the port where you want to send the code &lt;code&gt;/dev/ttyUSB0&lt;/code&gt; and the code itself &lt;code&gt;/temp/arduino_buid_342195/Blink.ino.hex&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;
pyupdi.py -d tiny1614 -c /dev/ttyUSB0 -b 9600 -f /tmp/arduino_build_342195/Blink.ino.hex -v
&lt;/pre&gt;
&lt;v...</description><pubDate>Fri, 20 Mar 2020 00:00:00 +0200</pubDate></item><item><title>How to read a datasheet</title><link>https://domingoclub.com/datasheet.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;Reading a datasheet isn't the easiest thing to do. It is full of technical details that often interfere with the actual data one can look after.&lt;/p&gt;
&lt;p&gt;I'll now take a tour of the things that seem important to me when reading a datasheet. And for that, we'll have a look at the &lt;a class="external" href="http://ww1.microchip.com/downloads/en/DeviceDoc/ATtiny1614-16-17-DataSheet-DS40002204A.pdf"&gt;datasheet of the ATTiny1614&lt;/a&gt; from Microship.&lt;/p&gt;
&lt;p&gt;To easily navigation into a large PDF document, use the &lt;code&gt;ctrl + f&lt;/code&gt; to open a search box and type the term you're looking for.&lt;/p&gt;
&lt;h2 id="configuration-summary"&gt;Configuration summary&lt;/h2&gt;
&lt;p&gt;The &lt;em&gt;configuration summary&lt;/em&gt; is the section where one can have a quick look at what the chip can or cannot do. How many pins does the chip have, what its memory size, how many inputs/outputs or AC pins are free to use. It may seem obvious but having a look at the summary before digging deeper in the content will save you time.&lt;/p&gt;
&lt;h2 id="pinout"&gt;Pinout&lt;/h2&gt;
&lt;p&gt;Then comes the pinout. This section is, for me, the most important. It will tell you how you will be able to interact with you microchip. The major part of finding &lt;em&gt;the&lt;/em&gt; appropriate chip is the understand if it offers you the connections you need.&lt;/p&gt;
&lt;p&gt;How many digital pins do you need in your project? What is their reference? Offer they PWM? etc. These a crucial questions when designing an electronic project around a microchip.&lt;/p&gt;
&lt;h2 id="memories"&gt;Memories&lt;/h2&gt;
&lt;p&gt;The &lt;em&gt;Memories&lt;/em&gt; section will indicate how much memory the microchip has. This is good to know when choosing a chip to be sure it will support your future program. Do you have to deal with data collection? How complex is your code logic? etc.&lt;/p&gt;
&lt;h2 id="power-consumption"&gt;Po...</description><pubDate>Thu, 19 Mar 2020 00:00:00 +0200</pubDate></item><item><title>Pomodoro code</title><link>https://domingoclub.com/pomodoro-code.html</link><description>&lt;html&gt;&lt;body&gt;&lt;h1 id="how-i-want-to-use-my-pomodoro"&gt;How I want to use my pomodoro&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Press the left button to start the timer&lt;/li&gt;
&lt;li&gt;If it's running, press the left button to pause the timer&lt;/li&gt;
&lt;li&gt;If it's paused, press the left button to resume the timer&lt;/li&gt;
&lt;li&gt;If it's paused, press the right button to stop the timer&lt;/li&gt;
&lt;li&gt;When it's running, the LEDs light up one by one until the time limit&lt;/li&gt;
&lt;li&gt;When it's running and it's a work period, LEDs are red&lt;/li&gt;
&lt;li&gt;When it's running and it's a break period, LEDs are green&lt;/li&gt;
&lt;li&gt;When it's paused, all the LEDs are light up and blue&lt;/li&gt;
&lt;/ul&gt;
&lt;video&gt;&lt;source src="pomo-playground.mp4"/&gt;&lt;/video&gt;
&lt;h1 id="the-code-that-does-this"&gt;The code that does this&lt;/h1&gt;
&lt;p&gt;For this software I am using the Arduino framework. This framework, like any other framework, is a collection of shortcuts that aims to make the programmer's life easier. At the end of the day, the code you write using a framework is compiled into its original language, which is, in this case, C ++.&lt;/p&gt;
&lt;pre&gt;
bool button_left;
bool button_right;
bool is_active = false;
bool is_paused = false;
int counter = 0;
int steps = 10;
int pomo = 30 * 600;
int pomo_work = pomo / 6 * 5;
int pomo_break = pomo / 6 * 1;

void setup() {
  CircuitPlayground.begin();
}

void on_second(int counter) {
  CircuitPlayground.clearPixels();
  if (counter &amp;lt;= pomo_work) {
    // work
    for (int i = 0; i &amp;lt;= steps; i++) {
      if (counter &amp;gt; pomo_work / steps * i) {
        CircuitPlayground.setPixelColor(i, 255,   0,   0);
      }
    }
  } else if (counter &amp;gt; pomo_work &amp;amp;&amp;amp; counter &amp;lt;= pomo) {
    // break
    for (int i = 0; i &amp;lt;= steps; i++) {
      if (counter - pomo_work &amp;gt; pomo_break / steps * i) {
        CircuitPlayground.setPixelColor(i, 0,   2...</description><pubDate>Wed, 18 Mar 2020 00:00:00 +0200</pubDate></item><item><title>Embedded programming</title><link>https://domingoclub.com/embedded-programming.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;Two weeks ago, I designed a pomodoro timer during the &lt;a class="internal" href="fabac-assignments-electronics-design.html"&gt;Electronics design&lt;/a&gt; week. It's now time to program it. I'm going to write the piece of code that will light my LEDs as time goes by and find a way to send it to the ATtiny1614 chip. I'm going to focus on the latter: how to send a program (= program) a chip. Well, that was the plan.&lt;/p&gt;
&lt;p&gt;Unfortunately, in the meantime, the coronavirus has hit Spain (and the whole world). We are now all in quarantine, with no access to the lab. I will have to work from home, with the equipment I already have, nothing more.&lt;/p&gt;
&lt;p&gt;&lt;img alt="pomo-circuit-playground" src="pomo-circuit-playground.jpeg"/&gt;&lt;/p&gt;
&lt;p&gt;For this reason, I'm going to use a &lt;a class="external" href="https://www.adafruit.com/product/3333"&gt;Circuit Playground Express&lt;/a&gt;. This tiny board is already equipped with 10 mini NeoPixels, 1 motion sensor, 1 temperature sensor, 1 sound sensor, 1 mini speaker, 2 push buttons, 1 slide switch, infrared receiver and transmitter and 8 alligator-clip friendly input/output pins. It's a perfect board for quick prototyping and code experiments.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;...</description><pubDate>Wed, 18 Mar 2020 00:00:00 +0200</pubDate></item><item><title>Test equipment</title><link>https://domingoclub.com/test-equipment.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;This week's group assignment is about how to use the test equipment in order to test/debug/understand electronic circuits. Because of the covid-19 situtation, I did this assignment alone, from my home.&lt;/p&gt;
&lt;h1 id="multimeter"&gt;Multimeter&lt;/h1&gt;
&lt;p&gt;A useful resource to understand how to use a multimeter is &lt;a class="external" href="https://learn.sparkfun.com/tutorials/how-to-use-a-multimeter/all"&gt;this tutorial&lt;/a&gt; from Sparkfun. It covers all the basics we should know.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="multimeter.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;The selection knob allows to set the multimeter to read different things such as milliamps (mA) of current, voltage (V) and resistance (Ω). The different positions of a multimeter are there to adjust the scale, depending on the values you are measuring.&lt;/p&gt;
&lt;h2 id="voltage-resistance"&gt;Voltage &amp;amp; resistance&lt;/h2&gt;
&lt;p&gt;Voltage and resistance can be measured the same way, as they both required to be measured in parallel.&lt;/p&gt;
&lt;p&gt;Set the multimeter to the appropriate (voltage (V) or resistance (Ω)) function. Connect the black probe to the ground (-) and the red probe to power (+). This should give you the voltage pr resistance of the circuit. If you measure it the other way around, you'll get the opposite values (negative).&lt;/p&gt;
&lt;h2 id="current"&gt;Current&lt;/h2&gt;
&lt;p&gt;Measuring current requires to connect the multimeter in the circuit, not only in parallel but in series. The current has to go through the multimeter in order to be measured.&lt;/p&gt;
&lt;p&gt;Interupt your circuit with the two probes of the multimeter, set it to the current function (A) and you'll get the value you're looking for.&lt;/p&gt;
&lt;h2 id="continuity"&gt;Continuity&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Continuity testing is the act of testing the resistance between two points. If there is very low resistance (less than a ...</description><pubDate>Mon, 21 Sep 2020 00:00:00 +0200</pubDate></item><item><title>Pomodoro timer</title><link>https://domingoclub.com/pomodoro-timer.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;I use a pomodoro timer daily to help me manage my time and effort in the tasks I want to accomplish. For now, I'm using &lt;a class="external" href="https://github.com/JaDogg/pydoro"&gt;Pydoro&lt;/a&gt;, an open source pomodoro terminal timer written in Python but I would like to build mine and have it physically next to my laptop.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Pomodoro Technique is a time management method developed by Francesco Cirillo in the late 1980s. The technique uses a timer to break down work into intervals, traditionally 25 minutes in length, separated by short breaks. Each interval is known as a pomodoro, from the Italian word for 'tomato', after the tomato-shaped kitchen timer that Cirillo used as a university student.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class="external" href="https://en.wikipedia.org/wiki/Pomodoro_Technique"&gt;Pomodoro Technique, Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="pomo-illu" src="pomo-illu.png"/&gt;&lt;/p&gt;
&lt;h2 id="components"&gt;Components&lt;/h2&gt;
&lt;p&gt;The main component I'm using is the microcontroller &lt;a class="external" href="https://www.microchip.com/wwwproducts/en/ATTINY1614"&gt;ATtiny1614&lt;/a&gt;. It will allow me to program my inputs and outputs needed to run my project.&lt;/p&gt;
&lt;p&gt;As outputs, I have 4 LEDs that are used to visualize the time passing by and the interactions with the pomodoro timer.
As inputs, I have to 2 switches (buttons) that allow me to start/pause/resume/reset the timer.&lt;/p&gt;
&lt;p&gt;I also need 6 resistor (one for each of the inputs/outputs), a capacitor, a FTDI header (to be able to communicate with the boards), a UPDI header (to program the board).&lt;/p&gt;
&lt;h2 id="design"&gt;Design&lt;/h2&gt;
&lt;p&gt;I'm using &lt;a class="external" href="https://kicad-pcb.org/"&gt;KiCAD&lt;/a&gt;, a cross platform and &lt;a class="external" href="https://gitlab.com/kicad"&gt;open-sourc...</description><pubDate>Tue, 15 Sep 2020 00:00:00 +0200</pubDate></item><item><title>Electronics design</title><link>https://domingoclub.com/electronics-design.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;I knew almost nothing about electronics before following the Fab Academy.I had to learn and understand the very basics of a electronic circuit and its composents, but also of electricity and its flow.&lt;/p&gt;
&lt;p&gt;To do so, I designed a pomodoro timer from scratch. I have learn a lot throughout the process and I have the feeling that this new knowledge will play a key role in what I will do for my personal project and afterwards.&lt;/p&gt;
&lt;p&gt;&lt;img alt="pomo" src="pomo.jpeg:flux"/&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;...</description><pubDate>Wed, 04 Mar 2020 00:00:00 +0200</pubDate></item><item><title>3D scanning</title><link>https://domingoclub.com/3D-scanning.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;There aren't many open source tools available and maintained for 3D scanning, but &lt;a class="external" href="https://alicevision.org/#meshroom"&gt;Meshroom&lt;/a&gt; is one of them. It is an open source photogrammetry software.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Photogrammetry is the art, science and technology of obtaining reliable information about physical objects and the environment through the process of recording, measuring and interpreting photographic images and patterns of electromagnetic radiant imagery and other phenomena.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class="external" href="https://en.wikipedia.org/wiki/Photogrammetry"&gt;Photogrammetry, Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="scan-success" src="scan-success.jpeg"/&gt;&lt;/p&gt;
&lt;h1 id="requirements"&gt;Requirements&lt;/h1&gt;
&lt;p&gt;Meshroom needs a &lt;a class="external" href="https://en.wikipedia.org/wiki/CUDA"&gt;CUDA-Enabled GPU&lt;/a&gt; in order to run properly. My computer doesn't have this type of processor, but I found a solution to get decent results without the full capacity of the software. I will explain it later in the process.&lt;/p&gt;
&lt;h2 id="installation"&gt;Installation&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Download the binary from &lt;a class="external" href="https://alicevision.org/#meshroom"&gt;Meshroom home page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Unzip it in any folder.&lt;/li&gt;
&lt;li&gt;Open a terminal and from this folder run &lt;code&gt;./Meshroom&lt;/code&gt; to launch the GUI. In my case I have to type &lt;code&gt;~/Documents/Apps/Meshroom-2019.2.0/./Meshroom&lt;/code&gt; to launch the app.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id="how-to"&gt;How-to&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;Take pictures around the object you want to scan&lt;/li&gt;
&lt;li&gt;Import them into Meshroom, in drag and drop in the window.&lt;/li&gt;
&lt;li&gt;If you have a CUDA-Enabled GPU, simply press the &lt;code&gt;start&lt;/code&gt; button. If not, you will have to delete 3 nodes: &lt;code&gt;PrepareDenseScene&lt;/code&gt;...</description><pubDate>Fri, 28 Feb 2020 00:00:00 +0200</pubDate></item><item><title>Oloid shape</title><link>https://domingoclub.com/oloid-shape.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;I'm exploring different types of shapes that could eventually be interesting regarding my final project. One of these is the oloid.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;An oloid is a three-dimensional curved geometric object that was discovered by Paul Schatz in 1929. It is the convex hull of a skeletal frame made by placing two linked congruent circles in perpendicular planes, so that the center of each circle lies on the edge of the other circle. The distance between the circle centers equals the radius of the circles. One third of each circle's perimeter lies inside the convex hull, so the same shape may be also formed as the convex hull of the two remaining circular arcs each spanning an angle of 4π/3.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class="external" href="https://en.wikipedia.org/wiki/Oloid"&gt;Oloid, Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;div class="embed-container"&gt;
&lt;iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" frameborder="0" src="https://www.youtube-nocookie.com/embed/GM3_JuFgJ2E"&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;An oloid is a geometric shape that only has one side. That means that if you make it roll on a flat surface, its entire surface will touch the flat surface at some point.&lt;/p&gt;
&lt;p&gt;The oloid shape can only be achieved by using an additive technique, such as 3D
printing, and not a subtractive technique, such as laser cutting or milling,
because the shape itself must be worked in all directions, not just from bottom
to top (or by using another machine, a robot, with more axes, but then the technique begins to be too complex for a small piece like this one).&lt;/p&gt;
&lt;h2 id="modeling"&gt;Modeling&lt;/h2&gt;
&lt;p&gt;&lt;a class="external" href="https://www.openscad.org/"&gt;OpenSCAD&lt;/a&gt;, the 3D CAD modeller that we use by writing code (as I s...</description><pubDate>Thu, 27 Feb 2020 00:00:00 +0200</pubDate></item><item><title>Printing a test file</title><link>https://domingoclub.com/printing-a-test-file.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;For this week's group assignement, I teamed up with &lt;a class="external" href="https://fabacademy.org/2020/labs/barcelona/students/tue-ngo/"&gt;Tue&lt;/a&gt; and &lt;a class="external" href="https://fabacademy.org/2020/labs/barcelona/students/david-prieto/"&gt;David&lt;/a&gt;. We picked a &lt;a class="external" href="https://www.thingiverse.com/thing:1363023"&gt;test file&lt;/a&gt; from Thingiverse in order to test different features of one of the 3D printers we have in Fab Lab Barcelona, the &lt;a class="external" href="https://www.creality3d.shop/products/creality-cr-10s-s5-3d-printer-diy-kit-large-printing-size-500x500x500mm"&gt;Creality3D CR-10 S5 3D&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="test file" src="testfilecad.jpeg"/&gt;&lt;/p&gt;
&lt;p&gt;This file allows us to test these features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;z-height check&lt;/li&gt;
&lt;li&gt;warp check&lt;/li&gt;
&lt;li&gt;spike&lt;/li&gt;
&lt;li&gt;hole in wall&lt;/li&gt;
&lt;li&gt;raft test&lt;/li&gt;
&lt;li&gt;overhang Steps 50° - 70°&lt;/li&gt;
&lt;li&gt;2 different extrusion widths: 0.48mm &amp;amp; 0.4mm&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="slicing"&gt;Slicing&lt;/h2&gt;
&lt;p&gt;To be able to print a 3D model, we have to send instructions to the printer, wich are written in &lt;a class="external" href="https://en.wikipedia.org/wiki/G-code"&gt;g-code&lt;/a&gt; and tells the motors where to move.
To prepare the g-code, we have to &lt;em&gt;slice&lt;/em&gt; our 3D model (.STL), to simulate and anticipate how the model will be printed, according to the printer settings and gravity law.&lt;/p&gt;
&lt;p&gt;&lt;img alt="cura lab" src="cura-lab.JPG"/&gt;&lt;/p&gt;
&lt;p&gt;At Fab Lab Barcelona, a computer with &lt;a class="external" href="https://ultimaker.com/software/ultimaker-cura"&gt;Ultimaker Cura&lt;/a&gt; is attached to the machines, with all the presets of the differents printers saved in it. It's therefore easier to directly use it in order to slice our model instead of searching the presets and install them on our personal laptop.&lt;/p&gt;
&lt;h3 ...</description><pubDate>Wed, 26 Feb 2020 00:00:00 +0200</pubDate></item><item><title>3D scanning and printing</title><link>https://domingoclub.com/3D-scanning-printing.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;3D printing is not as simple as pressing the &lt;em&gt;print&lt;/em&gt; button and waiting for the model to be printed. It is crucial to know how to prepare a 3D model, how the printer works and what are its limits, and how to balance printing time with print quality. This week, I'm going to test a printer, scan and print something.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;...</description><pubDate>Wed, 26 Feb 2020 00:00:00 +0200</pubDate></item><item><title>Making an in-circuit programmer</title><link>https://domingoclub.com/in-circuit-programmer.html</link><description>&lt;html&gt;&lt;body&gt;&lt;blockquote&gt;
&lt;p&gt;In-system programming (ISP), also called in-circuit serial programming (ICSP), is the ability of some programmable logic devices, microcontrollers, and other embedded devices to be programmed while installed in a complete system, rather than requiring the chip to be programmed prior to installing it into the system.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class="external" href="https://en.wikipedia.org/wiki/In-system_programming"&gt;In-circuit programming, Wikipedia.&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2 id="ftdi-updi"&gt;FTDI &amp;amp; UPDI&lt;/h2&gt;
&lt;p&gt;I decided to make an &lt;a class="external" href="https://www.ftdichip.com/"&gt;FTDI&lt;/a&gt; USB-FT230XS-serial. I have to admit that my choice isn't clear at this point. I could have chosen to make another model of programmer, any of them. It's almost impossible to make a thoughtful choice now because I don't know yet what kind of electronic architecture I will need later. Let's say that the most important thing now is learning how to create a programmer, any of them, and to be able to do it again later with a more specific electronic project.&lt;/p&gt;
&lt;p&gt;&lt;img alt="USB-FT230XS-serial" src="USB-FT230XS-serial.png"/&gt;&lt;/p&gt;
&lt;p&gt;To program this FTDI USB-FT230XS-serial chip, I also need a UPDI (Unified Program and Debugging Interface) which is an interface for programming and debugging other devices, such as the FTDI that I use.&lt;/p&gt;
&lt;p&gt;&lt;img alt="FTDI-UPDI" src="FTDI-UPDI.png"/&gt;&lt;/p&gt;
&lt;h3 id="files-preparation"&gt;Files preparation&lt;/h3&gt;
&lt;p&gt;We always need two differents files to mill a board, one for the traces and one for the outline, because these two tasks need differents end-mills: a 1/32 for the outline and a 1/64 (wich is super fragile) for the traces.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Import the PNG in &lt;a class="external" href="http://fabmodules.org/"&gt;Fabmodules&lt;/...</description><pubDate>Fri, 21 Feb 2020 00:00:00 +0200</pubDate></item><item><title>Testing the compact milling machine</title><link>https://domingoclub.com/testing-the-milling-machine.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;The goal of this group assignment is for us to know the potential gaps between our traces, or how thin the traces could be. Since the machines were always occupied and the booking system at Fab Lab Barcelona was not really effective, our class couldn't have a chance to do many group tests. In the end, we were able to finish only 1 group test with the participation of the whole class.&lt;/p&gt;
&lt;p&gt;We used the Roland MonoFab SRM-20 machine to mill a test file.&lt;/p&gt;
&lt;p&gt;&lt;img alt="linetest" src="linetest.png"/&gt;&lt;/p&gt;
&lt;h2 id="detailed-specs-of-the-machine"&gt;Detailed specs of the machine:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Work area: 203 x 152 x 60mm&lt;/li&gt;
&lt;li&gt;Loadable workpiece weight: 2kg&lt;/li&gt;
&lt;li&gt;Operating speed: 6mm/min - 1,800mm/min&lt;/li&gt;
&lt;li&gt;Spindle speed: 3,000 – 7,000rpm&lt;/li&gt;
&lt;li&gt;Input Format : RML-1&lt;/li&gt;
&lt;li&gt;Material: Modeling Wax, Chemical Wood, Foam, Acrylic, PCB&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="group-1" src="group-1.png"/&gt;
&lt;img alt="group-2" src="group-2.png"/&gt;&lt;/p&gt;
&lt;p&gt;We prepared the &lt;code&gt;.rml&lt;/code&gt; files using &lt;a class="external" href="http://fabmodules.org/"&gt;Fab Modules&lt;/a&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Select &lt;code&gt;.png&lt;/code&gt; input format and load the .png file&lt;/li&gt;
&lt;li&gt;Select &lt;code&gt;.rml&lt;/code&gt; output format&lt;/li&gt;
&lt;li&gt;Select the proper process: &lt;code&gt;PCB traces (1/64)&lt;/code&gt; or &lt;code&gt;PCB outline (1/32)&lt;/code&gt;. This will define the cut depth (0.1mm for milling traces and 0.6mm for cutting).&lt;/li&gt;
&lt;li&gt;Select &lt;code&gt;SRM-20&lt;/code&gt; in the output machine.&lt;/li&gt;
&lt;li&gt;Modify settings to origin &lt;code&gt;0,0,0 (x,y,z)&lt;/code&gt;; &lt;code&gt;zjog = 12&lt;/code&gt; (to make sure the milling bit will be lifted up while moving across the workpiece and avoid damaging both the traces and the fragile bit itself); and home &lt;code&gt;0,0,12 (x,y,z)&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Select the proper direction. If there are thin traces on the board, we need to sel...</description><pubDate>Thu, 20 Feb 2020 00:00:00 +0200</pubDate></item><item><title>Electronics production</title><link>https://domingoclub.com/electronics-production.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;It's the 4th week of the Fab Academy, we're now exploring the process of electronics production: How to make a in-circuit programmer from a &lt;a class="external" href="https://en.wikipedia.org/wiki/Printed_circuit_board"&gt;printed circuit board&lt;/a&gt; (PCB) and several electronic components, a programmer in wich I will send code to pilot my future electronic projects.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;...</description><pubDate>Wed, 19 Feb 2020 00:00:00 +0200</pubDate></item><item><title>The most common password ever</title><link>https://domingoclub.com/the-most-common-password-ever.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;According to &lt;a class="external" href="https://en.wikipedia.org/wiki/List_of_the_most_common_passwords"&gt;this page&lt;/a&gt;, the most common password ever is … &lt;code&gt;123456&lt;/code&gt;. It's so basic and evident I wanted to stick it on my laptop to send the subtle message to the people around me that their password is &lt;em&gt;maybe&lt;/em&gt; not the best.&lt;/p&gt;
&lt;p&gt;And you, is this one of your passwords?&lt;/p&gt;
&lt;p&gt;&lt;img alt="password" src="password.png"/&gt;&lt;/p&gt;
&lt;h2 id="vinyl-cutter"&gt;Vinyl cutter&lt;/h2&gt;
&lt;p&gt;The vinyl cutter we have at Fab Lab Barcelona is a &lt;a class="external" href="https://www.rolanddga.com/es/soporte/products/cutting/camm-1-gx-24-24-vinyl-cutter"&gt;Roland CAMM-1 Servo GX-24&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Work area: 584 x 24998mm&lt;/li&gt;
&lt;li&gt;Cutting speed: up to 500mm/s&lt;/li&gt;
&lt;li&gt;Cutting length: maximum 25m&lt;/li&gt;
&lt;li&gt;Cutting width: 50-700 mm&lt;/li&gt;
&lt;li&gt;Cutting force: 30 to 250gf&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="process"&gt;Process&lt;/h3&gt;
&lt;p&gt;The process of cutting something with a vinylcutter is straightforward:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Prepare your .EPS file&lt;/li&gt;
&lt;li&gt;Import it into the software of the machine,
  &lt;a class="external" href="https://www.rolanddgi.com/productos/software/roland-cutstudio-software"&gt;CutStudio&lt;/a&gt;,
  by going to &lt;code&gt;Object &amp;gt; Image Outline&lt;/code&gt; to get the trace of the design.&lt;/li&gt;
&lt;li&gt;Prepare your sheet of paper and insert it into the machine (from back to
  front), adjust the blade to be sure that the cutter will not cut through the
  material but only the surface.&lt;/li&gt;
&lt;li&gt;Set the size of the sheet via the machine commands and tell it to the software running on the computer attached to it&lt;/li&gt;
&lt;li&gt;Move the blade and set the origin, depending on the size of the design and the
  avaible material size.&lt;/li&gt;
&lt;li&gt;Press the &lt;em&gt;Print&lt;/em&gt; button, or type &lt;code&gt;Ctrl p&lt;/code&gt; to start cutting.&lt;/li...</description><pubDate>Mon, 17 Feb 2020 00:00:00 +0200</pubDate></item><item><title>Geodesic dome</title><link>https://domingoclub.com/geodesic-dome.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;A &lt;a class="external" href="https://en.wikipedia.org/wiki/Geodesic_dome"&gt;geodesic dome&lt;/a&gt; is a structure based on a geodesic polyhedron. The triangular elements of the dome are structurally rigid and distribute the structural stress throughout the structure, making geodesic domes able to withstand very heavy loads for their size.&lt;/p&gt;
&lt;p&gt;&lt;img alt="dome-reference" src="dome-reference.jpg"/&gt;&lt;/p&gt;
&lt;h2 id="design"&gt;Design&lt;/h2&gt;
&lt;p&gt;I wanted to build a geodesic dome made up of two triangular faces and a joint. But because the structure of a geodesic dome is mainly made up of sticks instead of faces, finding documentation was not as easy as expected. Finally, &lt;a class="external" href="https://simplydifferently.org/Geodesic_Dome_Notes?page=3#2V%20Icosahedron%20Dome"&gt;this website&lt;/a&gt; helped me to find the geometric values.&lt;/p&gt;
&lt;p&gt;&lt;img alt="dome-construction" src="dome-construction.png"/&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;30 x triangle A-A-B (55.57°, 55.57°, 68.86°)&lt;/li&gt;
&lt;li&gt;10 x triangle B-B-B (60.00°, 60.00°, 60.00°) &lt;/li&gt;
&lt;li&gt;55 connectors (with an angle of 18°)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="dome-freecad-0" src="dome-freecad-0.jpeg"/&gt;&lt;/p&gt;
&lt;p&gt;I used FreeCAD to design the dome elements. I first filled out a spreadsheet with the parameters that I collected, so that I could use these parametric values to design the different parts and be able to change things quickly in case of change.&lt;/p&gt;
&lt;p&gt;&lt;img alt="dome-freecad-3" src="dome-freecad-3.jpeg"/&gt;&lt;/p&gt;
&lt;p&gt;Finding the kerf was a key point in this project because the pieces had to fit perfectly to keep the entire structure as solid as it should be. Because the dome will be made of &lt;code&gt;plywood 4mm&lt;/code&gt; and due to the machine and its parameters, the kerf value is &lt;code&gt;0.15mm&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="dome-freecad-1" src="dome-freecad-1.jpeg"/&gt;&lt;/p&gt;
...</description><pubDate>Sun, 16 Feb 2020 00:00:00 +0200</pubDate></item><item><title>Laser cutter</title><link>https://domingoclub.com/laser-cutter-basics.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;The laser cutter is an excellent machine: it gives quick results, it is easy to learn, it works with different types of material (wood, acrylic, cardboard, etc.) and the cutting is very precise. Using joints allows you to go from 2D to 3D objects. It makes the laser cutter one of the best machines to quickly prototype an idea.&lt;/p&gt;
&lt;p&gt;&lt;img alt="nesting-cut" src="large:nesting-cut.jpg"/&gt;&lt;/p&gt;
&lt;h2 id="basics-of-lasercutting"&gt;Basics of lasercutting&lt;/h2&gt;
&lt;h3 id="security"&gt;Security&lt;/h3&gt;
&lt;p&gt;Because the lasercutter is fun and easy to use, it's also easy to forget that it can be dangerous. Here are some basic rules that accompany the use of the machine:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Do not leave the machine unattended&lt;/li&gt;
&lt;li&gt;Cut only materials that you know are safe (no chromium, no carbon, no PVC, no PVP)&lt;/li&gt;
&lt;li&gt;Always use the filter and wait for the smoke to disappear before opening the cover&lt;/li&gt;
&lt;li&gt;Make sure you know what to do in case of fire&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="focus"&gt;Focus&lt;/h3&gt;
&lt;p&gt;The focus is calculated based on the distance between the material and the
laser. It must be adjusted before any cutting, depending on the thickness of the
material. Also, keep in mind that the focal length varies depending on the lens
you use, more information about this &lt;a class="external" href="https://www.troteclaser.com/en-us/laser-machines/laser-accessories/focus-lenses/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;video&gt;&lt;source src="focus.mp4"/&gt;&lt;/video&gt;
&lt;p&gt;Setting the focus is a mechanical &amp;amp; low-tech process, the idea is simply to obtain the distance value between the nozzle and the material.&lt;/p&gt;
&lt;h3 id="speed-power"&gt;Speed &amp;amp; power&lt;/h3&gt;
&lt;p&gt;Speed and power are the two parameters that we have to adjust according to the desired results. The speed is defined in millimeters per second (0-400) and the power is defi...</description><pubDate>Sat, 15 Feb 2020 00:00:00 +0200</pubDate></item><item><title>Computer-controlled cutting</title><link>https://domingoclub.com/computer-controlled-cutting.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;This week is about exploring the possibilities of the computer-controlled cutting machines present in Fab Labs : the lasercutter and the vinylcutter. The first (group) assignement is to understand how the machines work and to obtain some of the values (specific to these machines) necessary to properly prepare the files before sending them to the machines. The second (personal) assignement is to design, lasercut, and document a parametric construction kit, and to cut something with the vinylcutter.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;...</description><pubDate>Fri, 14 Feb 2020 00:00:00 +0200</pubDate></item><item><title>Computer-aided design</title><link>https://domingoclub.com/computer-aided-design.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;A tour of open-source softwares for computer-aided design, in order to discover and learn some of the tools that I will use to design my future projects.&lt;/p&gt;
&lt;h1 id="gimp"&gt;GIMP&lt;/h1&gt;
&lt;p&gt;GIMP is a raster graphics editor used for image retouching and editing, converting between different image formats, free-form drawing, …&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ sudo apt-get install gimp&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="references" src="references-making.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;Even if I only used GIMP to draw a quick moodboard for my project, I directly had a good feeling with it, the software seems robust and well designed. There's a huge online community behind it, which makes finding tips and tricks super easy.&lt;/p&gt;
&lt;p&gt;&lt;img alt="references" src="references.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;File: &lt;a class="external" href="https://cloud.antoine.studio/index.php/s/RKRdTDDCXPsSt4t/download?path=%2F02-cad&amp;amp;files=references.xcf"&gt;references.xcf&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="shortcuts"&gt;Shortcuts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Move: &lt;code&gt;m&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Scale: &lt;code&gt;shift + t&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Crop and resize: &lt;code&gt;shift + c&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Rotate: &lt;code&gt;shift + r&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And many more with a "GIMP shortcuts" &lt;a class="external" href="https://duckduckgo.com/?q=GIMP+shortcuts&amp;amp;t=canonical&amp;amp;atb=v195-1&amp;amp;ia=cheatsheet&amp;amp;iax=1"&gt;research&lt;/a&gt; in DuckDuckGo.&lt;/p&gt;
&lt;h1 id="inkscape"&gt;Inkscape&lt;/h1&gt;
&lt;p&gt;Inkscape is a vector graphics editor.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ sudo apt-get install inkscape&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="schema" src="schema-making.png"/&gt;&lt;/p&gt;
&lt;p&gt;I used Inkscape to draw a basic but vector schema of my project. I did not have a good experience with this software: I had a few bugs, the software crashed several times, the manipulation of the vectors was not precise. Surely I need to spend more time on it, maybe to tweak it a bit, because the co...</description><pubDate>Sun, 09 Feb 2020 00:00:00 +0200</pubDate></item><item><title>Other tools</title><link>https://domingoclub.com/other-tools.html</link><description>&lt;html&gt;&lt;body&gt;&lt;h2 id="video-compression"&gt;Video compression&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;ffmpeg -i video.mp4 -b 1000000 compressed-video.mp4&lt;/code&gt; or &lt;code&gt;ffmpeg -i video.mp4 -b 1000000 -t 10 compressed-video.mp4&lt;/code&gt; where &lt;code&gt;-t 10&lt;/code&gt; is the duration (10 sec.)&lt;/p&gt;
&lt;h2 id="imagemagick-recipes"&gt;Imagemagick recipes&lt;/h2&gt;
&lt;p&gt;&lt;a class="external" href="https://imagemagick.org/index.php"&gt;Imagemagick&lt;/a&gt; can resize, flip, mirror, rotate, distort, shear and transform images, adjust image colors, apply various special effects, or draw text, lines, polygons, ellipses and Bézier curves. Via the terminal.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Rotate &lt;code&gt;mogrify -rotate 180 *.jpg&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/body&gt;&lt;/html&gt;...</description><pubDate>Sat, 03 Oct 2020 00:00:00 +0200</pubDate></item><item><title>Git cheatsheet</title><link>https://domingoclub.com/git-cheatsheet.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.&lt;/p&gt;
&lt;h2 id="useful-commands"&gt;Useful commands&lt;/h2&gt;
&lt;p&gt;Start a project from scratch: &lt;code&gt;git init&lt;/code&gt; and then &lt;code&gt;git remote add origin {repository-url}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Pull the last commits from the distant server: &lt;code&gt;git pull&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Add all the modifications to the stack: &lt;code&gt;git add .&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Do a commit with a description: &lt;code&gt;git commit -m "message"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Push the commit(s) on the distant server: &lt;code&gt;git push&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Discard the changes on uncommited files: &lt;code&gt;git checkout .&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Create a new branch: &lt;code&gt;git branch {new-branch}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Merge the current branch with another: &lt;code&gt;git merge {other-branch}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Delete a local branch: &lt;code&gt;git branch -d {local-branch}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Delete a remote branch: &lt;code&gt;git push origin --delete {remote-branch}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Change your working branch: &lt;code&gt;git checkout {branch-name}&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="visualization"&gt;Visualization&lt;/h3&gt;
&lt;p&gt;Get the repo's status &lt;code&gt;git status&lt;/code&gt; or the repo's history: &lt;code&gt;git log&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Get the list of branches:  &lt;code&gt;git branch&lt;/code&gt; or &lt;code&gt;git branch -v&lt;/code&gt; to get more info&lt;/p&gt;
&lt;p&gt;Get the the commit-tree of all branches: &lt;code&gt;git log --oneline --abbrev-commit --all --graph --decorate --color&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="configuration"&gt;Configuration&lt;/h3&gt;
&lt;p&gt;Keep the password in memory for the next 8 hours: &lt;code&gt;git config --global credential.helper 'cache --timeout 28800'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Add a shortcut to add and commit at the same time: &lt;code&gt;git config --global alias.ac '!git add -A &amp;amp;&amp;amp; git commit'&lt;/code&gt; and then &lt;code&gt;git ac -m "messa...</description><pubDate>Thu, 06 Feb 2020 00:00:00 +0200</pubDate></item><item><title>My documentation tool</title><link>https://domingoclub.com/my-documentation-tool.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;My ideal documentation tool is as light as possible and requires very little energy to operate; is perfectly understandable and does the tasks I want it to do - nothing more; evolves with my needs; has no Javascript, no cookies, no trackers.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A sustainable website means ensuring support for older hardware, slower networks and improving the portability and archivability of the blog’s content.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class="external" href="https://homebrewserver.club/low-tech-website-howto.html"&gt;Homebrewserver.club&lt;/a&gt; / &lt;a class="external" href="https://solar.lowtechmagazine.com/2018/09/how-to-build-a-lowtech-website.html"&gt;Low-tech Magazine&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;The best way to meet these requirements and to fully understand how it works is to write it, from scratch. So that's what I did, and that's what you have in front of you right now.&lt;/p&gt;
&lt;p&gt;It may not be as efficient or extensible as other static site generators (like &lt;a class="external" href="https://gohugo.io/"&gt;Hugo&lt;/a&gt;, &lt;a class="external" href="https://jekyllrb.com/"&gt;Jekyll&lt;/a&gt; or &lt;a class="external" href="https://blog.getpelican.com/"&gt;Pelican&lt;/a&gt;) but everything works pretty well and I am satisfied with the tool I made, it is minimal and matches my values.&lt;/p&gt;
&lt;h2 id="sources"&gt;Sources&lt;/h2&gt;
&lt;p&gt;This documentation tool is open-source by default, as all the things I (try to) do. Sources are available on &lt;a class="external" href="https://gitlab.com/antoinestudio/dok-antoine-studio"&gt;Gitlab&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Feel free to use it, copy it, do whatever you want, but keep in mind that it was written in one specific context and may not work properly in another.&lt;/p&gt;
&lt;h2 id="core-functionalities"&gt;Core functionalities&lt;/h2&gt;
&lt;p&gt;In order to be able to develop this low-tech static site...</description><pubDate>Wed, 05 Feb 2020 00:00:00 +0200</pubDate></item><item><title>My computer</title><link>https://domingoclub.com/my-computer.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;Few months ago, I decided to switch from the closed Apple ecosystem to the wonderful and open world of Linux. I'm running &lt;a class="external" href="https://elementary.io/"&gt;Elementary OS&lt;/a&gt;, a distribution based on Ubuntu, on a mid-2014 macbook pro. This machine isn't the more convenient to run a Linux distribution but I will keep using it as long as I can, even if I have some tiny hardware issues, simply because the more sustainable computer is the one I already have.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Text editor: &lt;a class="external" href="https://vscodium.com/"&gt;VSCodium&lt;/a&gt; + &lt;a class="external" href="https://neovim.io/"&gt;NeoVim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Terminal: &lt;a class="external" href="https://github.com/software-jessies-org/jessies/wiki/Terminator"&gt;Terminator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;version control system: &lt;a class="external" href="https://git-scm.com/"&gt;GIT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Static site generator: my own "spaghetti script" that I wrote in Python&lt;/li&gt;
&lt;li&gt;Browser: &lt;a class="external" href="https://www.mozilla.org/en-US/firefox/new/"&gt;Firefox&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;TODO: Update the content, since I now use Manjaro Linux.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;...</description><pubDate>Tue, 04 Feb 2020 00:00:00 +0200</pubDate></item><item><title>Principles and practices</title><link>https://domingoclub.com/principles-and-practices.html</link><description>&lt;html&gt;&lt;body&gt;&lt;h1 id="fab-academy"&gt;Fab Academy&lt;/h1&gt;
&lt;p&gt;For the next six months (from January to June 2020), I will follow the &lt;a class="external" href="https://fabacademy.org/"&gt;Fab Academy&lt;/a&gt; at &lt;a class="external" href="https://fablabbcn.org/"&gt;Fab Lab Barcelona&lt;/a&gt;. The Fab Academy is an intensive program to learn how to design and prototype projects using digital fabrication tools and machine, such as: computer-controlled cutting, electronics, 3D scanning and printing, electronics design,computer-controlled machining, embedded programming, molding and casting, networking and communications, mechanical design, interface and application programming and machine design.&lt;/p&gt;
&lt;p&gt;I have a background in graphic &amp;amp; web design and web development and I love to imagine and build experiences for the common using open-source tools. But working in the web industry, I got a little bored of building things from a computer to another. I started to feel the need of working with tangible materials. I want to learn how to repair the old instead of creating the new, to think about our energy consumption, to (re)think about how we use our tools in the everyday life and what it means, and to dedicate my practice to nature.&lt;/p&gt;
&lt;h1 id="final-project-proposal"&gt;Final project proposal&lt;/h1&gt;
&lt;p&gt;As part of the academy, I was asked to think about a personal project that represents all the techniques I will learn. I have had something in mind for some time and this academy can offer me the tools to do my research. Let me explain it to you.&lt;/p&gt;
&lt;p&gt;I am fascinated by nature, by all the plants and their survival mechanisms, all the means they find to perpetuate their species. I would like to understand them better and to invite more people to take a closer look, to take more interest in this absolute...</description><pubDate>Sun, 26 Jan 2020 00:00:00 +0200</pubDate></item><item><title>Final project: research</title><link>https://domingoclub.com/final-project-research.html</link><description>&lt;html&gt;&lt;body&gt;&lt;h1 id="introduction"&gt;Introduction&lt;/h1&gt;
&lt;p&gt;This article is a place for me to post ideas about my final project. It is not intended to be clear or readable. At least, not at the moment. I have compiled my notes and the elements that were used in the realisation of my final project on the &lt;a class="internal" href="green-observatory.html"&gt;page&lt;/a&gt; dedicated to it.&lt;/p&gt;
&lt;p&gt;In short, I'm designing a device that listens to the electrical activity of plants and transforms it into a physical and meditative movement that we humans can observe and contemplate. I call it &lt;em&gt;The Green Observatory&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a class="btn internal" href="green-observatory.html"&gt;The Green Osbservatory&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="IMG_8664.jpg"/&gt;&lt;/p&gt;
&lt;h1 id="external-resources"&gt;External resources&lt;/h1&gt;
&lt;p&gt;&lt;a class="btn external" href="http://board.antoine.studio/?controller=BoardViewController&amp;amp;action=readonly&amp;amp;token=3d91cde4a718ce18cd986a67eff38899f8eb1612ddae621507a00da28f4f"&gt;Kanban board&lt;/a&gt;
&lt;a class="btn external" href="https://docs.google.com/spreadsheets/d/1nhU3fjO-yuVyLYuE5AC39vmvim1dWyxoJ2PYOr6acvA/edit?usp=sharing"&gt;List of materials&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;...</description><pubDate>Wed, 15 Jan 2020 00:00:00 +0200</pubDate></item><item><title>About</title><link>https://domingoclub.com/about.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;Bonjour, my name is Antoine Jaunard (1990) and I'm from Brussels, Belgium. I recently moved to Barcelona (ES) via a lovely detour by Amsterdam (NL).&lt;/p&gt;
&lt;p&gt;&lt;img alt="antoine-chill" src="antoine-chill.jpg"/&gt;&lt;/p&gt;
&lt;h1 id="about-me"&gt;About me&lt;/h1&gt;
&lt;h2 id="fab-academy-2020"&gt;Fab Academy (2020)&lt;/h2&gt;
&lt;p&gt;I'm currently following the &lt;a class="external" href="https://fabacademy.org/"&gt;Fab Academy&lt;/a&gt; at &lt;a class="external" href="https://fablabbcn.org/"&gt;Fab Lab Barcelona&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This intensive program is about designing and prototyping projects using digital fabrication tools and machine, such as: computer-controlled cutting, electronics, 3D scanning and printing, electronics design,computer-controlled machining, embedded programming, molding and casting, networking and communications, mechanical design, interface and application programming and machine design.&lt;/p&gt;
&lt;h2 id="variable-2014-2019"&gt;Variable (2014-2019)&lt;/h2&gt;
&lt;p&gt;Together with Constant Mathieu, we had run a small but good webdesign studio called &lt;a class="external" href="http://variable.club/"&gt;Variable&lt;/a&gt;, from 2014 to 2019. We had put emphasis on creating our own custom tools to stay task-specific, light and versatile.&lt;/p&gt;
&lt;p&gt;During our journey, we had the chance to work for/with a music festival (Schiev), a web radio (The Word Radio), a contemporary art museum (MIMA), a centre for contemporary art and an independent cinema (Netwerk Aalst), few architecture offices (Office KGDVS, V+, A Practice), an art school (La Cambre), and many more.&lt;/p&gt;
&lt;h2 id="ecole-de-recherche-graphique-2010-2014"&gt;École de Recherche Graphique (2010-2014)&lt;/h2&gt;
&lt;p&gt;I'm graduated in Art and Graphic Design at the &lt;a class="external" href="http://erg.be"&gt;École de Recherche Graphique&lt;/a&gt; (ERG) of Brussels.
It was all about learning how t...</description><pubDate>Fri, 04 Sep 2020 00:00:00 +0200</pubDate></item><item><title>Kitty terminal</title><link>https://domingoclub.com/kitty.html</link><description>&lt;html&gt;&lt;body&gt;&lt;ul&gt;
&lt;li&gt;configuration file &lt;code&gt;.config/kitty/kitty.conf&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;open kitty terminal &lt;code&gt;ctrl + 1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;new window &lt;code&gt;F5&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;change window &lt;code&gt;left top right bottom (cursor)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;resize window &lt;code&gt;shift + cmd + r&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;open a new tab &lt;code&gt;shift + cmd + t&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;go to next tab &lt;code&gt;shift + cmd + -&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;go to previous tab &lt;code&gt;shift + cmd + &amp;lt;-&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/body&gt;&lt;/html&gt;...</description><pubDate>Fri, 03 Jan 2020 00:00:00 +0200</pubDate></item><item><title>Ilford XP2 - 4449</title><link>https://domingoclub.com/ilford-xp2-4449.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;These photos were taken between November 2019 and February 2020, in Amsterdam, Brussels, Valencia and Barcelona. On a Ilford XP2 film.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="large:4449-01.jpg"/&gt;
&lt;img alt="" src="large:4449-02.jpg"/&gt;
&lt;img alt="" src="large:4449-03.jpg"/&gt;
&lt;img alt="" src="large:4449-04.jpg"/&gt;
&lt;img alt="" src="large:4449-05.jpg"/&gt;
&lt;img alt="" src="large:4449-06.jpg"/&gt;
&lt;img alt="" src="large:4449-07.jpg"/&gt;
&lt;img alt="" src="large:4449-08.jpg"/&gt;
&lt;img alt="" src="large:4449-09.jpg"/&gt;
&lt;img alt="" src="large:4449-10.jpg"/&gt;
&lt;img alt="" src="large:4449-11.jpg:flux"/&gt;
&lt;img alt="" src="large:4449-12.jpg"/&gt;
&lt;img alt="" src="large:4449-13.jpg"/&gt;
&lt;img alt="" src="large:4449-14.jpg"/&gt;
&lt;img alt="" src="large:4449-15.jpg"/&gt;
&lt;img alt="" src="large:4449-16.jpg:flux"/&gt;
&lt;img alt="" src="large:4449-17.jpg"/&gt;
&lt;img alt="" src="large:4449-18.jpg:flux"/&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;...</description><pubDate>Wed, 30 Sep 2020 00:00:00 +0200</pubDate></item></channel></rss>